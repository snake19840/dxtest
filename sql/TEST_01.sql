/*
 Navicat Premium Data Transfer

 Source Server         : 134.101.168.30
 Source Server Type    : Oracle
 Source Server Version : 110200
 Source Host           : 134.101.168.30:1521
 Source Schema         : TEST

 Target Server Type    : Oracle
 Target Server Version : 110200
 File Encoding         : 65001

 Date: 19/06/2020 10:44:53
*/


-- ----------------------------
-- Table structure for CONTRACTCLASS
-- ----------------------------
DROP TABLE "TEST"."CONTRACTCLASS";
CREATE TABLE "TEST"."CONTRACTCLASS" (
  "CLASSFAMILY" VARCHAR2(150 BYTE),
  "CLASSSON" VARCHAR2(150 BYTE),
  "ID" NUMBER
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;
COMMENT ON COLUMN "TEST"."CONTRACTCLASS"."CLASSFAMILY" IS '项目大类';
COMMENT ON COLUMN "TEST"."CONTRACTCLASS"."CLASSSON" IS '项目子类';
COMMENT ON COLUMN "TEST"."CONTRACTCLASS"."ID" IS 'ID';

-- ----------------------------
-- Table structure for CONTRACTMY
-- ----------------------------
DROP TABLE "TEST"."CONTRACTMY";
CREATE TABLE "TEST"."CONTRACTMY" (
  "MYU" VARCHAR2(500 BYTE),
  "MYA" VARCHAR2(700 BYTE),
  "MYP" VARCHAR2(70 BYTE),
  "MYN" VARCHAR2(70 BYTE),
  "MYE" VARCHAR2(70 BYTE),
  "MYAD" VARCHAR2(700 BYTE),
  "MYE2" VARCHAR2(70 BYTE),
  "MYX" VARCHAR2(200 BYTE),
  "MYEMAIL" VARCHAR2(200 BYTE),
  "MYID" VARCHAR2(200 BYTE)
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;
COMMENT ON COLUMN "TEST"."CONTRACTMY"."MYU" IS '委托方单位';
COMMENT ON COLUMN "TEST"."CONTRACTMY"."MYA" IS '委托方地址';
COMMENT ON COLUMN "TEST"."CONTRACTMY"."MYP" IS '法定代表人';
COMMENT ON COLUMN "TEST"."CONTRACTMY"."MYN" IS '项目联系人';
COMMENT ON COLUMN "TEST"."CONTRACTMY"."MYE" IS '联系方式';
COMMENT ON COLUMN "TEST"."CONTRACTMY"."MYAD" IS '通讯地址';
COMMENT ON COLUMN "TEST"."CONTRACTMY"."MYE2" IS '电话';
COMMENT ON COLUMN "TEST"."CONTRACTMY"."MYX" IS '传真';
COMMENT ON COLUMN "TEST"."CONTRACTMY"."MYEMAIL" IS '电子邮箱';
COMMENT ON COLUMN "TEST"."CONTRACTMY"."MYID" IS 'id';

-- ----------------------------
-- Table structure for CONTRACTOPP
-- ----------------------------
DROP TABLE "TEST"."CONTRACTOPP";
CREATE TABLE "TEST"."CONTRACTOPP" (
  "OPPU" VARCHAR2(500 BYTE),
  "OPPP" VARCHAR2(70 BYTE),
  "OPPA" VARCHAR2(500 BYTE),
  "OPPN" VARCHAR2(70 BYTE),
  "OPPE" VARCHAR2(70 BYTE),
  "OPPX" VARCHAR2(500 BYTE),
  "OPPMAIL" VARCHAR2(500 BYTE),
  "OPPID" VARCHAR2(200 BYTE),
  "OPPE2" VARCHAR2(70 BYTE),
  "OPPAD" VARCHAR2(700 BYTE)
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;
COMMENT ON COLUMN "TEST"."CONTRACTOPP"."OPPU" IS '供应商单位';
COMMENT ON COLUMN "TEST"."CONTRACTOPP"."OPPP" IS '法定代表人';
COMMENT ON COLUMN "TEST"."CONTRACTOPP"."OPPA" IS '供应商地址';
COMMENT ON COLUMN "TEST"."CONTRACTOPP"."OPPN" IS '项目联系人';
COMMENT ON COLUMN "TEST"."CONTRACTOPP"."OPPE" IS '联系方式';
COMMENT ON COLUMN "TEST"."CONTRACTOPP"."OPPX" IS '项目联系人传真';
COMMENT ON COLUMN "TEST"."CONTRACTOPP"."OPPMAIL" IS '项目联系人电子邮箱';
COMMENT ON COLUMN "TEST"."CONTRACTOPP"."OPPID" IS 'id';
COMMENT ON COLUMN "TEST"."CONTRACTOPP"."OPPE2" IS '项目联系人电话';
COMMENT ON COLUMN "TEST"."CONTRACTOPP"."OPPAD" IS '通讯地址';

-- ----------------------------
-- Table structure for CONTRACTPAY
-- ----------------------------
DROP TABLE "TEST"."CONTRACTPAY";
CREATE TABLE "TEST"."CONTRACTPAY" (
  "PAYNAME" VARCHAR2(150 BYTE),
  "CLASSFAMILY" VARCHAR2(150 BYTE)
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;
COMMENT ON COLUMN "TEST"."CONTRACTPAY"."PAYNAME" IS '付款名称';
COMMENT ON COLUMN "TEST"."CONTRACTPAY"."CLASSFAMILY" IS '项目大类';

-- ----------------------------
-- Table structure for DXTEST
-- ----------------------------
DROP TABLE "TEST"."DXTEST";
CREATE TABLE "TEST"."DXTEST" (
  "ID" NUMBER,
  "STDATE" VARCHAR2(70 BYTE),
  "SDATE" VARCHAR2(70 BYTE),
  "EDATE" VARCHAR2(70 BYTE),
  "REDATE" VARCHAR2(70 BYTE),
  "PNAME" VARCHAR2(70 BYTE),
  "USE" VARCHAR2(70 BYTE),
  "OWNNAME" VARCHAR2(70 BYTE),
  "PRONAME" VARCHAR2(70 BYTE),
  "MANNAME" VARCHAR2(70 BYTE),
  "AGENAME" VARCHAR2(100 BYTE),
  "MANTYP" VARCHAR2(100 BYTE),
  "SNAME" VARCHAR2(50 BYTE),
  "STYP" VARCHAR2(70 BYTE),
  "POS" VARCHAR2(70 BYTE),
  "IP" VARCHAR2(60 BYTE),
  "PORT" VARCHAR2(60 BYTE),
  "CPU" VARCHAR2(1000 BYTE),
  "MEMORY" VARCHAR2(1000 BYTE),
  "DISK" VARCHAR2(1000 BYTE),
  "SYN" VARCHAR2(1000 BYTE),
  "ORACLE" VARCHAR2(1000 BYTE),
  "SN" VARCHAR2(70 BYTE),
  "OTH" VARCHAR2(500 BYTE),
  "SROOT" VARCHAR2(20 BYTE),
  "SPWD" VARCHAR2(20 BYTE),
  "OROOT" VARCHAR2(20 BYTE),
  "OPWD" VARCHAR2(20 BYTE),
  "AROOT" VARCHAR2(20 BYTE),
  "APWD" VARCHAR2(20 BYTE),
  "TITLE" VARCHAR2(20 BYTE),
  "URL" VARCHAR2(500 BYTE),
  "SID" VARCHAR2(70 BYTE),
  "DID" VARCHAR2(70 BYTE),
  "STATU" CHAR(1 BYTE)
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for DXTESTCONTRACT
-- ----------------------------
DROP TABLE "TEST"."DXTESTCONTRACT";
CREATE TABLE "TEST"."DXTESTCONTRACT" (
  "ID" NUMBER,
  "CONTRACTPICTURE" VARCHAR2(600 BYTE),
  "CONTRACTID" VARCHAR2(50 BYTE),
  "CONTRACTSDATE" VARCHAR2(70 BYTE),
  "CONTRACTEDATE" VARCHAR2(70 BYTE),
  "CONTRACTNAME" VARCHAR2(200 BYTE),
  "CONTRACTNOWDATE" VARCHAR2(70 BYTE),
  "STATU" VARCHAR2(5 BYTE),
  "OPPUNIT" VARCHAR2(200 BYTE),
  "MARKDATE" VARCHAR2(70 BYTE),
  "CONTRACTNLIFE" VARCHAR2(70 BYTE),
  "CAMOUNT" VARCHAR2(20 BYTE),
  "MYCONN" VARCHAR2(200 BYTE),
  "OPPCONN" VARCHAR2(200 BYTE),
  "MYCONNT" VARCHAR2(20 BYTE),
  "OPPCONNT" VARCHAR2(20 BYTE),
  "CTYPE" VARCHAR2(5 BYTE),
  "TAX" NUMBER(5,4),
  "PLAN1" VARCHAR2(3000 BYTE),
  "PLANDATE1" VARCHAR2(70 BYTE),
  "PLAN2" VARCHAR2(70 BYTE),
  "PLANDATE2" VARCHAR2(70 BYTE),
  "PLAN3" VARCHAR2(70 BYTE),
  "PLANDATE3" VARCHAR2(70 BYTE),
  "PLAN4" VARCHAR2(70 BYTE),
  "PLANDATE4" VARCHAR2(70 BYTE),
  "PLANM1" VARCHAR2(70 BYTE),
  "PLANM4" VARCHAR2(70 BYTE),
  "PLANM3" VARCHAR2(70 BYTE),
  "PLANM2" VARCHAR2(3000 BYTE),
  "SGMONEY" NUMBER(12,2),
  "INITMONEY" NUMBER(12,2),
  "FINMONEY" VARCHAR2(70 BYTE),
  "WARMONEY" NUMBER(12,2),
  "MYNAME" VARCHAR2(30 BYTE),
  "OPPNAME" VARCHAR2(30 BYTE),
  "OPPID" VARCHAR2(200 BYTE),
  "MYID" VARCHAR2(200 BYTE),
  "CLASSSON" VARCHAR2(100 BYTE)
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 8192 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;
COMMENT ON COLUMN "TEST"."DXTESTCONTRACT"."CONTRACTSDATE" IS '上传文件';
COMMENT ON COLUMN "TEST"."DXTESTCONTRACT"."CONTRACTNAME" IS '合同名称';
COMMENT ON COLUMN "TEST"."DXTESTCONTRACT"."CONTRACTNOWDATE" IS '录入时间';
COMMENT ON COLUMN "TEST"."DXTESTCONTRACT"."STATU" IS '合同状态';
COMMENT ON COLUMN "TEST"."DXTESTCONTRACT"."OPPUNIT" IS '对方单位';
COMMENT ON COLUMN "TEST"."DXTESTCONTRACT"."MARKDATE" IS '合同签订日期';
COMMENT ON COLUMN "TEST"."DXTESTCONTRACT"."CONTRACTNLIFE" IS '合同有效期';
COMMENT ON COLUMN "TEST"."DXTESTCONTRACT"."CAMOUNT" IS '合同金额';
COMMENT ON COLUMN "TEST"."DXTESTCONTRACT"."MYCONN" IS '我方联系人';
COMMENT ON COLUMN "TEST"."DXTESTCONTRACT"."OPPCONN" IS '对方联系人';
COMMENT ON COLUMN "TEST"."DXTESTCONTRACT"."MYCONNT" IS '我方联系电话';
COMMENT ON COLUMN "TEST"."DXTESTCONTRACT"."OPPCONNT" IS '对方联系电话';
COMMENT ON COLUMN "TEST"."DXTESTCONTRACT"."TAX" IS '税率';
COMMENT ON COLUMN "TEST"."DXTESTCONTRACT"."PLAN1" IS '计划数组1(默认)';
COMMENT ON COLUMN "TEST"."DXTESTCONTRACT"."PLANDATE1" IS '合同提醒时间';
COMMENT ON COLUMN "TEST"."DXTESTCONTRACT"."PLAN2" IS '是否附加合同';
COMMENT ON COLUMN "TEST"."DXTESTCONTRACT"."PLANDATE2" IS '当前计划时间';
COMMENT ON COLUMN "TEST"."DXTESTCONTRACT"."PLAN3" IS '主合同号';
COMMENT ON COLUMN "TEST"."DXTESTCONTRACT"."PLANM1" IS '当前项目名称';
COMMENT ON COLUMN "TEST"."DXTESTCONTRACT"."PLANM2" IS '计划数组2(修改)';
COMMENT ON COLUMN "TEST"."DXTESTCONTRACT"."SGMONEY" IS '当前付款比例';
COMMENT ON COLUMN "TEST"."DXTESTCONTRACT"."INITMONEY" IS '当前付款税率';
COMMENT ON COLUMN "TEST"."DXTESTCONTRACT"."FINMONEY" IS '当前小类';
COMMENT ON COLUMN "TEST"."DXTESTCONTRACT"."MYNAME" IS '我方签署人';
COMMENT ON COLUMN "TEST"."DXTESTCONTRACT"."OPPNAME" IS '对方签署人';
COMMENT ON COLUMN "TEST"."DXTESTCONTRACT"."OPPID" IS '乙方信息ID';
COMMENT ON COLUMN "TEST"."DXTESTCONTRACT"."MYID" IS '甲方信息ID';
COMMENT ON COLUMN "TEST"."DXTESTCONTRACT"."CLASSSON" IS '项目子类';

-- ----------------------------
-- Table structure for DXTESTCONTRACTFILE
-- ----------------------------
DROP TABLE "TEST"."DXTESTCONTRACTFILE";
CREATE TABLE "TEST"."DXTESTCONTRACTFILE" (
  "CONTRACTPICTURE" VARCHAR2(600 BYTE),
  "CONTRACTID" VARCHAR2(50 BYTE),
  "CONTRACTNOWDATE" VARCHAR2(70 BYTE),
  "PLAN1" VARCHAR2(70 BYTE),
  "PLAN2" VARCHAR2(70 BYTE),
  "PLAN3" VARCHAR2(70 BYTE),
  "PLAN4" VARCHAR2(70 BYTE)
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 8192 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;
COMMENT ON COLUMN "TEST"."DXTESTCONTRACTFILE"."CONTRACTPICTURE" IS '文件链接';
COMMENT ON COLUMN "TEST"."DXTESTCONTRACTFILE"."CONTRACTID" IS '合同ID';
COMMENT ON COLUMN "TEST"."DXTESTCONTRACTFILE"."CONTRACTNOWDATE" IS '上传日期';
COMMENT ON COLUMN "TEST"."DXTESTCONTRACTFILE"."PLAN1" IS '付款名称';

-- ----------------------------
-- Table structure for DXTESTFILE
-- ----------------------------
DROP TABLE "TEST"."DXTESTFILE";
CREATE TABLE "TEST"."DXTESTFILE" (
  "ID" NUMBER,
  "URL" VARCHAR2(500 BYTE),
  "REDATE" CHAR(25 BYTE)
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;
COMMENT ON COLUMN "TEST"."DXTESTFILE"."ID" IS 'ID';
COMMENT ON COLUMN "TEST"."DXTESTFILE"."URL" IS 'URL链接';
COMMENT ON COLUMN "TEST"."DXTESTFILE"."REDATE" IS '上传时间';

-- ----------------------------
-- Table structure for DXTESTTEMP
-- ----------------------------
DROP TABLE "TEST"."DXTESTTEMP";
CREATE TABLE "TEST"."DXTESTTEMP" (
  "ID" NUMBER,
  "STDATE" CHAR(12 BYTE),
  "PNAME" VARCHAR2(70 BYTE),
  "USE" VARCHAR2(70 BYTE),
  "OWNNAME" VARCHAR2(70 BYTE),
  "PRONAME" VARCHAR2(70 BYTE),
  "MANNAME" VARCHAR2(70 BYTE),
  "AGENAME" VARCHAR2(100 BYTE),
  "MANTYP" VARCHAR2(100 BYTE),
  "SNAME" VARCHAR2(50 BYTE),
  "STYP" VARCHAR2(70 BYTE),
  "POS" VARCHAR2(20 BYTE),
  "IP" VARCHAR2(60 BYTE),
  "PORT" VARCHAR2(60 BYTE),
  "CPU" VARCHAR2(150 BYTE),
  "MEMORY" VARCHAR2(30 BYTE),
  "DISK" VARCHAR2(30 BYTE),
  "SYN" VARCHAR2(150 BYTE),
  "ORACLE" VARCHAR2(60 BYTE),
  "SN" VARCHAR2(20 BYTE),
  "OTH" VARCHAR2(500 BYTE),
  "SID" VARCHAR2(20 BYTE),
  "DID" VARCHAR2(20 BYTE)
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for DXTESTUSER
-- ----------------------------
DROP TABLE "TEST"."DXTESTUSER";
CREATE TABLE "TEST"."DXTESTUSER" (
  "ID" NUMBER,
  "USERID" VARCHAR2(45 BYTE),
  "USERNAME" VARCHAR2(45 BYTE),
  "USERPWD" VARCHAR2(45 BYTE),
  "AUT" VARCHAR2(5 BYTE),
  "DAY" VARCHAR2(4 BYTE),
  "EDI" VARCHAR2(4 BYTE),
  "DEL" VARCHAR2(4 BYTE),
  "CON" VARCHAR2(4 BYTE),
  "ADDEVENT" VARCHAR2(4 BYTE),
  "LEVELA" VARCHAR2(4 BYTE),
  "CONEDIT" VARCHAR2(4 BYTE),
  "CONDEL" VARCHAR2(4 BYTE)
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;
COMMENT ON COLUMN "TEST"."DXTESTUSER"."USERID" IS '用户中文名';
COMMENT ON COLUMN "TEST"."DXTESTUSER"."USERNAME" IS '用户帐号';
COMMENT ON COLUMN "TEST"."DXTESTUSER"."USERPWD" IS '用户密码';
COMMENT ON COLUMN "TEST"."DXTESTUSER"."DAY" IS '默认提醒时间';
COMMENT ON COLUMN "TEST"."DXTESTUSER"."EDI" IS '编辑';
COMMENT ON COLUMN "TEST"."DXTESTUSER"."DEL" IS '删除';
COMMENT ON COLUMN "TEST"."DXTESTUSER"."CON" IS '合同';
COMMENT ON COLUMN "TEST"."DXTESTUSER"."ADDEVENT" IS '在未来加入事件';
COMMENT ON COLUMN "TEST"."DXTESTUSER"."LEVELA" IS '权限级别';
COMMENT ON COLUMN "TEST"."DXTESTUSER"."CONEDIT" IS '合同编辑';
COMMENT ON COLUMN "TEST"."DXTESTUSER"."CONDEL" IS '合同删除';

-- ----------------------------
-- Table structure for DXTESTWORK
-- ----------------------------
DROP TABLE "TEST"."DXTESTWORK";
CREATE TABLE "TEST"."DXTESTWORK" (
  "ID" NUMBER,
  "MESSAGE" VARCHAR2(2000 BYTE),
  "USERNAME" VARCHAR2(30 BYTE),
  "USERPWD" VARCHAR2(30 BYTE),
  "NOWDATE" VARCHAR2(50 BYTE),
  "SDATE" VARCHAR2(70 BYTE),
  "EDATE" VARCHAR2(70 BYTE),
  "SN" VARCHAR2(50 BYTE),
  "PICTURE" VARCHAR2(500 BYTE),
  "STATU" VARCHAR2(30 BYTE),
  "STNO" VARCHAR2(100 BYTE),
  "TASK" VARCHAR2(3 BYTE),
  "TIME" VARCHAR2(100 BYTE)
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;
COMMENT ON COLUMN "TEST"."DXTESTWORK"."MESSAGE" IS '故障信息';
COMMENT ON COLUMN "TEST"."DXTESTWORK"."USERNAME" IS '用户名';
COMMENT ON COLUMN "TEST"."DXTESTWORK"."USERPWD" IS '用户密码';
COMMENT ON COLUMN "TEST"."DXTESTWORK"."NOWDATE" IS '记录时间戳';
COMMENT ON COLUMN "TEST"."DXTESTWORK"."SDATE" IS '故障开始时间';
COMMENT ON COLUMN "TEST"."DXTESTWORK"."EDATE" IS '故障结束时间';
COMMENT ON COLUMN "TEST"."DXTESTWORK"."SN" IS '设备SN号';
COMMENT ON COLUMN "TEST"."DXTESTWORK"."PICTURE" IS '故障图片';
COMMENT ON COLUMN "TEST"."DXTESTWORK"."STATU" IS '故障状态';
COMMENT ON COLUMN "TEST"."DXTESTWORK"."STNO" IS '故障编号';
COMMENT ON COLUMN "TEST"."DXTESTWORK"."TASK" IS '是否恢复';
COMMENT ON COLUMN "TEST"."DXTESTWORK"."TIME" IS '登记时间';

-- ----------------------------
-- Table structure for MD_ADDITIONAL_PROPERTIES
-- ----------------------------
DROP TABLE "TEST"."MD_ADDITIONAL_PROPERTIES";
CREATE TABLE "TEST"."MD_ADDITIONAL_PROPERTIES" (
  "ID" NUMBER NOT NULL,
  "CONNECTION_ID_FK" NUMBER NOT NULL,
  "REF_ID_FK" NUMBER NOT NULL,
  "REF_TYPE" VARCHAR2(4000 BYTE) NOT NULL,
  "PROPERTY_ORDER" NUMBER,
  "PROP_KEY" VARCHAR2(4000 BYTE) NOT NULL,
  "VALUE" VARCHAR2(4000 BYTE),
  "SECURITY_GROUP_ID" NUMBER DEFAULT 0  NOT NULL,
  "CREATED_ON" DATE DEFAULT sysdate  NOT NULL,
  "CREATED_BY" VARCHAR2(255 BYTE),
  "LAST_UPDATED_ON" DATE,
  "LAST_UPDATED_BY" VARCHAR2(255 BYTE)
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;
COMMENT ON COLUMN "TEST"."MD_ADDITIONAL_PROPERTIES"."ID" IS 'Primary Key';
COMMENT ON COLUMN "TEST"."MD_ADDITIONAL_PROPERTIES"."CONNECTION_ID_FK" IS 'Connection to which this belongs //PARENTFIELD';
COMMENT ON COLUMN "TEST"."MD_ADDITIONAL_PROPERTIES"."REF_ID_FK" IS 'The object to which this property blongs';
COMMENT ON COLUMN "TEST"."MD_ADDITIONAL_PROPERTIES"."REF_TYPE" IS 'Type of object that this property belongs to';
COMMENT ON COLUMN "TEST"."MD_ADDITIONAL_PROPERTIES"."PROPERTY_ORDER" IS 'This is to handle a situation where multiple properties have a relevant order, or multiple properties have multiple values';
COMMENT ON COLUMN "TEST"."MD_ADDITIONAL_PROPERTIES"."PROP_KEY" IS 'The keyname for this property';
COMMENT ON COLUMN "TEST"."MD_ADDITIONAL_PROPERTIES"."VALUE" IS 'The value for this property';
COMMENT ON TABLE "TEST"."MD_ADDITIONAL_PROPERTIES" IS 'This table is used to store additional properties in key-value pairs.  It is designed to store "other information" that is not supported in the main database object table.';

-- ----------------------------
-- Table structure for MD_APPLICATIONFILES
-- ----------------------------
DROP TABLE "TEST"."MD_APPLICATIONFILES";
CREATE TABLE "TEST"."MD_APPLICATIONFILES" (
  "ID" NUMBER NOT NULL,
  "APPLICATIONS_ID_FK" NUMBER NOT NULL,
  "NAME" VARCHAR2(200 BYTE) NOT NULL,
  "URI" VARCHAR2(4000 BYTE) NOT NULL,
  "TYPE" VARCHAR2(100 BYTE) NOT NULL,
  "STATE" VARCHAR2(100 BYTE) NOT NULL,
  "LANGUAGE" VARCHAR2(100 BYTE),
  "LOC" NUMBER,
  "SECURITY_GROUP_ID" NUMBER DEFAULT 0  NOT NULL,
  "CREATED_ON" DATE DEFAULT sysdate  NOT NULL,
  "CREATED_BY" VARCHAR2(4000 BYTE),
  "UPDATED_ON" DATE,
  "UPDATED_BY" VARCHAR2(4000 BYTE)
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;
COMMENT ON COLUMN "TEST"."MD_APPLICATIONFILES"."NAME" IS 'file name  //OBJECTNAME';
COMMENT ON COLUMN "TEST"."MD_APPLICATIONFILES"."URI" IS 'The uri is the part of the file url after the base dir has been removed.  See MD_APPLICATION for base dir';
COMMENT ON COLUMN "TEST"."MD_APPLICATIONFILES"."TYPE" IS 'This will denote the type of file we have, including DIR, FILE (text), BINARY, IGNORE (where we choose to ignore files)';
COMMENT ON COLUMN "TEST"."MD_APPLICATIONFILES"."STATE" IS 'State will be how this file is operated on.  For example. it will be OPEN, NEW, FIXED, IGNORED, REVIEWED, COMPLETE';
COMMENT ON COLUMN "TEST"."MD_APPLICATIONFILES"."LANGUAGE" IS 'Language of the file that has been processed.';
COMMENT ON COLUMN "TEST"."MD_APPLICATIONFILES"."SECURITY_GROUP_ID" IS 'APEX';
COMMENT ON COLUMN "TEST"."MD_APPLICATIONFILES"."CREATED_ON" IS 'APEX';
COMMENT ON COLUMN "TEST"."MD_APPLICATIONFILES"."CREATED_BY" IS 'APEX';
COMMENT ON COLUMN "TEST"."MD_APPLICATIONFILES"."UPDATED_ON" IS 'APEX';
COMMENT ON COLUMN "TEST"."MD_APPLICATIONFILES"."UPDATED_BY" IS 'APEX';
COMMENT ON TABLE "TEST"."MD_APPLICATIONFILES" IS 'Holds a tuple for each file that is being processed whether it is changed or not.';

-- ----------------------------
-- Table structure for MD_APPLICATIONS
-- ----------------------------
DROP TABLE "TEST"."MD_APPLICATIONS";
CREATE TABLE "TEST"."MD_APPLICATIONS" (
  "ID" NUMBER NOT NULL,
  "NAME" VARCHAR2(4000 BYTE),
  "DESCRIPTION" VARCHAR2(4000 BYTE),
  "BASE_DIR" VARCHAR2(4000 BYTE),
  "OUTPUT_DIR" VARCHAR2(4000 BYTE),
  "BACKUP_DIR" VARCHAR2(4000 BYTE),
  "INPLACE" NUMBER,
  "PROJECT_ID_FK" NUMBER NOT NULL,
  "SECURITY_GROUP_ID" NUMBER DEFAULT 0  NOT NULL,
  "CREATED_ON" DATE DEFAULT sysdate  NOT NULL,
  "CREATED_BY" VARCHAR2(255 BYTE),
  "LAST_UPDATED_ON" DATE,
  "LAST_UPDATED_BY" VARCHAR2(255 BYTE)
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;
COMMENT ON COLUMN "TEST"."MD_APPLICATIONS"."ID" IS 'Primary Key';
COMMENT ON COLUMN "TEST"."MD_APPLICATIONS"."NAME" IS 'Name of the application suite  //OBJECTNAME';
COMMENT ON COLUMN "TEST"."MD_APPLICATIONS"."DESCRIPTION" IS 'Overview of what the application does.';
COMMENT ON COLUMN "TEST"."MD_APPLICATIONS"."BASE_DIR" IS 'This is the base src directory for the application.  It could be an svn checkout, a clearcase view or something similar';
COMMENT ON COLUMN "TEST"."MD_APPLICATIONS"."OUTPUT_DIR" IS 'This is the output directory where the scanner will present the converted files, if there are converted or modified.';
COMMENT ON COLUMN "TEST"."MD_APPLICATIONS"."BACKUP_DIR" IS 'This is the directory in which the application files are backed up if a backp is chosen';
COMMENT ON COLUMN "TEST"."MD_APPLICATIONS"."INPLACE" IS 'Designates whether the changes have been made inplace, in the source directory or not';
COMMENT ON COLUMN "TEST"."MD_APPLICATIONS"."PROJECT_ID_FK" IS 'project of the database(s) this application relates to';
COMMENT ON TABLE "TEST"."MD_APPLICATIONS" IS 'This is the base table for application projects.  It holds the base information for applications associated with a database';

-- ----------------------------
-- Table structure for MD_CATALOGS
-- ----------------------------
DROP TABLE "TEST"."MD_CATALOGS";
CREATE TABLE "TEST"."MD_CATALOGS" (
  "ID" NUMBER NOT NULL,
  "CONNECTION_ID_FK" NUMBER NOT NULL,
  "CATALOG_NAME" VARCHAR2(4000 BYTE),
  "DUMMY_FLAG" CHAR(1 BYTE) DEFAULT 'N' ,
  "NATIVE_SQL" CLOB,
  "NATIVE_KEY" VARCHAR2(4000 BYTE),
  "COMMENTS" VARCHAR2(4000 BYTE),
  "SECURITY_GROUP_ID" NUMBER DEFAULT 0  NOT NULL,
  "CREATED_ON" DATE DEFAULT sysdate  NOT NULL,
  "CREATED_BY" VARCHAR2(255 BYTE),
  "LAST_UPDATED_ON" DATE,
  "LAST_UPDATED_BY" VARCHAR2(255 BYTE)
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;
COMMENT ON COLUMN "TEST"."MD_CATALOGS"."CONNECTION_ID_FK" IS 'Foreign key into the connections table - Shows what connection this catalog belongs to //PARENTFIELD';
COMMENT ON COLUMN "TEST"."MD_CATALOGS"."CATALOG_NAME" IS 'Name of the catalog //OBJECTNAME';
COMMENT ON COLUMN "TEST"."MD_CATALOGS"."DUMMY_FLAG" IS 'Flag to show if this catalog is a "dummy" catalog which is used as a placeholder for those platforms that do not support catalogs.  ''N'' signifies that this is NOT a dummy catalog, while ''Y'' signifies that it is.';
COMMENT ON COLUMN "TEST"."MD_CATALOGS"."NATIVE_SQL" IS 'THe SQL used to create this catalog';
COMMENT ON COLUMN "TEST"."MD_CATALOGS"."NATIVE_KEY" IS 'A unique identifier used to identify the catalog at source.';
COMMENT ON TABLE "TEST"."MD_CATALOGS" IS 'Store catalogs in this table.';

-- ----------------------------
-- Table structure for MD_CODE_REGEX
-- ----------------------------
DROP TABLE "TEST"."MD_CODE_REGEX";
CREATE TABLE "TEST"."MD_CODE_REGEX" (
  "ID" NUMBER NOT NULL,
  "REGEX" VARCHAR2(100 BYTE) NOT NULL,
  "DESCRIPTION" VARCHAR2(200 BYTE) NOT NULL
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;
COMMENT ON COLUMN "TEST"."MD_CODE_REGEX"."ID" IS 'ID of regex for searching source code';
COMMENT ON COLUMN "TEST"."MD_CODE_REGEX"."REGEX" IS 'Regex to use in reports of artifiacts in code.  This will be used for customers to analyze what is in their code.';

-- ----------------------------
-- Table structure for MD_COLUMNS
-- ----------------------------
DROP TABLE "TEST"."MD_COLUMNS";
CREATE TABLE "TEST"."MD_COLUMNS" (
  "ID" NUMBER NOT NULL,
  "TABLE_ID_FK" NUMBER NOT NULL,
  "COLUMN_NAME" VARCHAR2(4000 BYTE) NOT NULL,
  "COLUMN_ORDER" NUMBER NOT NULL,
  "COLUMN_TYPE" VARCHAR2(4000 BYTE),
  "PRECISION" NUMBER,
  "SCALE" NUMBER,
  "NULLABLE" CHAR(1 BYTE) NOT NULL,
  "DEFAULT_VALUE" VARCHAR2(4000 BYTE),
  "NATIVE_SQL" CLOB,
  "NATIVE_KEY" VARCHAR2(4000 BYTE),
  "DATATYPE_TRANSFORMED_FLAG" CHAR(1 BYTE),
  "COMMENTS" VARCHAR2(4000 BYTE),
  "SECURITY_GROUP_ID" NUMBER DEFAULT 0  NOT NULL,
  "CREATED_BY" VARCHAR2(255 BYTE),
  "CREATED_ON" DATE DEFAULT sysdate  NOT NULL,
  "LAST_UPDATED_BY" VARCHAR2(255 BYTE),
  "LAST_UPDATED_ON" DATE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;
COMMENT ON COLUMN "TEST"."MD_COLUMNS"."ID" IS 'Primary Key';
COMMENT ON COLUMN "TEST"."MD_COLUMNS"."TABLE_ID_FK" IS 'The table that this column is part of //PARENTFIELD';
COMMENT ON COLUMN "TEST"."MD_COLUMNS"."COLUMN_NAME" IS 'The name of the column //OBJECTNAME';
COMMENT ON COLUMN "TEST"."MD_COLUMNS"."COLUMN_ORDER" IS 'The order this appears in the table';
COMMENT ON COLUMN "TEST"."MD_COLUMNS"."COLUMN_TYPE" IS 'The type of the column';
COMMENT ON COLUMN "TEST"."MD_COLUMNS"."PRECISION" IS 'The precision on the column';
COMMENT ON COLUMN "TEST"."MD_COLUMNS"."SCALE" IS 'The scale of the column';
COMMENT ON COLUMN "TEST"."MD_COLUMNS"."NULLABLE" IS 'Yes or No.  Null signifies NO';
COMMENT ON COLUMN "TEST"."MD_COLUMNS"."DEFAULT_VALUE" IS 'Default value on the column';
COMMENT ON COLUMN "TEST"."MD_COLUMNS"."NATIVE_SQL" IS 'The SQL used to create this column at source';
COMMENT ON COLUMN "TEST"."MD_COLUMNS"."NATIVE_KEY" IS 'Unique identifier for this object at source';
COMMENT ON COLUMN "TEST"."MD_COLUMNS"."DATATYPE_TRANSFORMED_FLAG" IS 'This is set to ''Y'' to show if the data type was transformed.  This is useful so we don''t apply more than 1 datatype transformation to a column';
COMMENT ON TABLE "TEST"."MD_COLUMNS" IS 'Column information is stored in this table.';

-- ----------------------------
-- Table structure for MD_CONNECTIONS
-- ----------------------------
DROP TABLE "TEST"."MD_CONNECTIONS";
CREATE TABLE "TEST"."MD_CONNECTIONS" (
  "ID" NUMBER NOT NULL,
  "PROJECT_ID_FK" NUMBER NOT NULL,
  "TYPE" VARCHAR2(4000 BYTE),
  "HOST" VARCHAR2(4000 BYTE),
  "PORT" NUMBER,
  "USERNAME" VARCHAR2(4000 BYTE),
  "PASSWORD" VARCHAR2(4000 BYTE),
  "DBURL" VARCHAR2(4000 BYTE),
  "NAME" VARCHAR2(255 BYTE),
  "NATIVE_SQL" CLOB,
  "STATUS" VARCHAR2(30 BYTE),
  "NUM_CATALOGS" NUMBER,
  "NUM_COLUMNS" NUMBER,
  "NUM_CONSTRAINTS" NUMBER,
  "NUM_GROUPS" NUMBER,
  "NUM_ROLES" NUMBER,
  "NUM_INDEXES" NUMBER,
  "NUM_OTHER_OBJECTS" NUMBER,
  "NUM_PACKAGES" NUMBER,
  "NUM_PRIVILEGES" NUMBER,
  "NUM_SCHEMAS" NUMBER,
  "NUM_SEQUENCES" NUMBER,
  "NUM_STORED_PROGRAMS" NUMBER,
  "NUM_SYNONYMS" NUMBER,
  "NUM_TABLES" NUMBER,
  "NUM_TABLESPACES" NUMBER,
  "NUM_TRIGGERS" NUMBER,
  "NUM_USER_DEFINED_DATA_TYPES" NUMBER,
  "NUM_USERS" NUMBER,
  "NUM_VIEWS" NUMBER,
  "COMMENTS" VARCHAR2(4000 BYTE),
  "SECURITY_GROUP_ID" NUMBER DEFAULT 0  NOT NULL,
  "CREATED_ON" DATE DEFAULT sysdate  NOT NULL,
  "CREATED_BY" VARCHAR2(255 BYTE),
  "LAST_UPDATED_ON" DATE,
  "LAST_UPDATED_BY" VARCHAR2(255 BYTE)
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;
COMMENT ON COLUMN "TEST"."MD_CONNECTIONS"."ID" IS 'Primary key';
COMMENT ON COLUMN "TEST"."MD_CONNECTIONS"."PROJECT_ID_FK" IS 'The project to which this connection belongs //PARENTFIELD';
COMMENT ON COLUMN "TEST"."MD_CONNECTIONS"."TYPE" IS 'The type of the connection - For example it could be used to store "ORACLE" or "MYSQL"';
COMMENT ON COLUMN "TEST"."MD_CONNECTIONS"."HOST" IS 'The host to which this connection connects.';
COMMENT ON COLUMN "TEST"."MD_CONNECTIONS"."PORT" IS 'The port to which this connection connects';
COMMENT ON COLUMN "TEST"."MD_CONNECTIONS"."USERNAME" IS 'The username used to make the connection';
COMMENT ON COLUMN "TEST"."MD_CONNECTIONS"."PASSWORD" IS 'The password used to make this connection';
COMMENT ON COLUMN "TEST"."MD_CONNECTIONS"."DBURL" IS 'The database url used to make this connection';
COMMENT ON COLUMN "TEST"."MD_CONNECTIONS"."NAME" IS '//OBJECTNAME';
COMMENT ON COLUMN "TEST"."MD_CONNECTIONS"."NATIVE_SQL" IS 'The native sql used to create this connection';
COMMENT ON COLUMN "TEST"."MD_CONNECTIONS"."STATUS" IS 'Status of Migration, = captured,converted,generated,datamoved';
COMMENT ON TABLE "TEST"."MD_CONNECTIONS" IS 'This table is used to store connection information.  For example, in migrations, we could be carrying out a consolidation which occurs across many connections.';

-- ----------------------------
-- Table structure for MD_CONSTRAINTS
-- ----------------------------
DROP TABLE "TEST"."MD_CONSTRAINTS";
CREATE TABLE "TEST"."MD_CONSTRAINTS" (
  "ID" NUMBER NOT NULL,
  "DELETE_CLAUSE" VARCHAR2(4000 BYTE),
  "NAME" VARCHAR2(4000 BYTE),
  "CONSTRAINT_TYPE" VARCHAR2(4000 BYTE),
  "TABLE_ID_FK" NUMBER NOT NULL,
  "REFTABLE_ID_FK" NUMBER,
  "CONSTRAINT_TEXT" CLOB,
  "LANGUAGE" VARCHAR2(40 BYTE) NOT NULL,
  "COMMENTS" VARCHAR2(4000 BYTE),
  "SECURITY_GROUP_ID" NUMBER DEFAULT 0  NOT NULL,
  "CREATED_ON" DATE DEFAULT sysdate  NOT NULL,
  "CREATED_BY" VARCHAR2(255 BYTE),
  "LAST_UPDATED_ON" DATE,
  "LAST_UPDATED_BY" VARCHAR2(255 BYTE)
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;
COMMENT ON COLUMN "TEST"."MD_CONSTRAINTS"."ID" IS 'Primary Key';
COMMENT ON COLUMN "TEST"."MD_CONSTRAINTS"."DELETE_CLAUSE" IS 'delete option , can be either CASCADE, RESTRICT or NULL';
COMMENT ON COLUMN "TEST"."MD_CONSTRAINTS"."NAME" IS 'Name of the constraint //OBJECTNAME';
COMMENT ON COLUMN "TEST"."MD_CONSTRAINTS"."CONSTRAINT_TYPE" IS 'Type of the constraint (e.g. CHECK)';
COMMENT ON COLUMN "TEST"."MD_CONSTRAINTS"."TABLE_ID_FK" IS 'Table on which this constraint exists //PARENTFIELD';
COMMENT ON COLUMN "TEST"."MD_CONSTRAINTS"."REFTABLE_ID_FK" IS 'Used in foreign keys - this gives the table that we refer to.';
COMMENT ON COLUMN "TEST"."MD_CONSTRAINTS"."CONSTRAINT_TEXT" IS 'The text of the constraint';
COMMENT ON COLUMN "TEST"."MD_CONSTRAINTS"."LANGUAGE" IS '//PUBLIC';
COMMENT ON TABLE "TEST"."MD_CONSTRAINTS" IS 'Table for storing information about a constraint';

-- ----------------------------
-- Table structure for MD_CONSTRAINT_DETAILS
-- ----------------------------
DROP TABLE "TEST"."MD_CONSTRAINT_DETAILS";
CREATE TABLE "TEST"."MD_CONSTRAINT_DETAILS" (
  "ID" NUMBER NOT NULL,
  "REF_FLAG" CHAR(1 BYTE) DEFAULT 'N' ,
  "CONSTRAINT_ID_FK" NUMBER NOT NULL,
  "COLUMN_ID_FK" NUMBER,
  "COLUMN_PORTION" NUMBER,
  "CONSTRAINT_TEXT" CLOB,
  "DETAIL_ORDER" NUMBER NOT NULL,
  "SECURITY_GROUP_ID" NUMBER DEFAULT 0  NOT NULL,
  "CREATED_ON" DATE DEFAULT sysdate  NOT NULL,
  "CREATED_BY" VARCHAR2(255 BYTE),
  "LAST_UPDATED_ON" DATE,
  "LAST_UPDATED_BY" VARCHAR2(255 BYTE)
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;
COMMENT ON COLUMN "TEST"."MD_CONSTRAINT_DETAILS"."ID" IS 'Primary Key';
COMMENT ON COLUMN "TEST"."MD_CONSTRAINT_DETAILS"."REF_FLAG" IS '"N" or Null signify that this column is the colum that is used in the constraint.  A flag of Y signifies that the colum is a referenced column (i.e. part of a foreign key constraint)';
COMMENT ON COLUMN "TEST"."MD_CONSTRAINT_DETAILS"."CONSTRAINT_ID_FK" IS 'Constraint that this detail belongs to //PARENTFIELD';
COMMENT ON COLUMN "TEST"."MD_CONSTRAINT_DETAILS"."COLUMN_PORTION" IS 'The portion of a column this detail belongs (e.g. for constrints on substrings)';
COMMENT ON COLUMN "TEST"."MD_CONSTRAINT_DETAILS"."CONSTRAINT_TEXT" IS 'The text of the constraint';
COMMENT ON TABLE "TEST"."MD_CONSTRAINT_DETAILS" IS 'Constraint details show what columns are "involved" in a constraint.';

-- ----------------------------
-- Table structure for MD_DERIVATIVES
-- ----------------------------
DROP TABLE "TEST"."MD_DERIVATIVES";
CREATE TABLE "TEST"."MD_DERIVATIVES" (
  "ID" NUMBER NOT NULL,
  "SRC_ID" NUMBER NOT NULL,
  "SRC_TYPE" VARCHAR2(4000 BYTE),
  "DERIVED_ID" NUMBER NOT NULL,
  "DERIVED_TYPE" VARCHAR2(4000 BYTE),
  "DERIVED_CONNECTION_ID_FK" NUMBER NOT NULL,
  "TRANSFORMED" CHAR(1 BYTE),
  "ORIGINAL_IDENTIFIER" VARCHAR2(4000 BYTE),
  "NEW_IDENTIFIER" VARCHAR2(4000 BYTE),
  "DERIVED_OBJECT_NAMESPACE" VARCHAR2(40 BYTE),
  "DERIVATIVE_REASON" VARCHAR2(10 BYTE),
  "SECURITY_GROUP_ID" NUMBER DEFAULT 0  NOT NULL,
  "CREATED_ON" DATE DEFAULT sysdate  NOT NULL,
  "CREATED_BY" VARCHAR2(255 BYTE),
  "LAST_UPDATED_ON" DATE,
  "LAST_UPDATED_BY" VARCHAR2(255 BYTE),
  "ENABLED" CHAR(1 BYTE) DEFAULT 'Y' 
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;
COMMENT ON COLUMN "TEST"."MD_DERIVATIVES"."TRANSFORMED" IS 'Set this field to ''Y'' if we carry out any sort of transformation on teh derived object.';
COMMENT ON TABLE "TEST"."MD_DERIVATIVES" IS 'This table is used to store objects that are derived from each other.  For example in a migration an auto-increment column in a source model could be mapped to a primary key, and a sequence, and a trigger.  The MD_DERIVATIVES table would store the fact that these 3 objects are derived from the auto-increment column.';

-- ----------------------------
-- Table structure for MD_FILE_ARTIFACTS
-- ----------------------------
DROP TABLE "TEST"."MD_FILE_ARTIFACTS";
CREATE TABLE "TEST"."MD_FILE_ARTIFACTS" (
  "ID" NUMBER NOT NULL,
  "APPLICATIONFILES_ID" NUMBER NOT NULL,
  "PATTERN" VARCHAR2(4000 BYTE),
  "STRING_FOUND" VARCHAR2(4000 BYTE),
  "STRING_REPLACED" VARCHAR2(4000 BYTE),
  "TYPE" VARCHAR2(200 BYTE),
  "STATUS" VARCHAR2(4000 BYTE),
  "LINE" NUMBER,
  "PATTERN_START" NUMBER,
  "PATTERN_END" NUMBER,
  "DUE_DATE" DATE,
  "DB_TYPE" VARCHAR2(100 BYTE),
  "CODE_TYPE" VARCHAR2(1000 BYTE),
  "DESCRIPTION" VARCHAR2(4000 BYTE),
  "PRIORITY" NUMBER,
  "SECURITY_GROUP_ID" VARCHAR2(20 BYTE) DEFAULT '0'  NOT NULL,
  "CREATED_ON" DATE DEFAULT sysdate  NOT NULL,
  "CREATED_BY" VARCHAR2(4000 BYTE),
  "LAST_UPDATED" DATE,
  "LAST_UPDATED_BY" VARCHAR2(4000 BYTE)
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;
COMMENT ON COLUMN "TEST"."MD_FILE_ARTIFACTS"."PATTERN" IS 'Pattern used to search source file for interesting artifiacts';
COMMENT ON COLUMN "TEST"."MD_FILE_ARTIFACTS"."STRING_FOUND" IS 'String found in source from the pattern supplied';
COMMENT ON COLUMN "TEST"."MD_FILE_ARTIFACTS"."STRING_REPLACED" IS 'This is the string which replace the string found if it was replaced.';
COMMENT ON COLUMN "TEST"."MD_FILE_ARTIFACTS"."TYPE" IS 'This is the type of the replacement.  It could be a straight replace from a replacement pattern, or we could have passed the string to a translator which would change the string depending on the database.';
COMMENT ON COLUMN "TEST"."MD_FILE_ARTIFACTS"."STATUS" IS 'Pattern used to search source file for interesting artifiacts';
COMMENT ON COLUMN "TEST"."MD_FILE_ARTIFACTS"."DUE_DATE" IS 'Due date is used by the TODO mechanism to manage the validation and work to complete this change';
COMMENT ON COLUMN "TEST"."MD_FILE_ARTIFACTS"."DB_TYPE" IS 'Source database calls type';
COMMENT ON COLUMN "TEST"."MD_FILE_ARTIFACTS"."CODE_TYPE" IS 'Source code db api, like dblib, jdbc';
COMMENT ON COLUMN "TEST"."MD_FILE_ARTIFACTS"."DESCRIPTION" IS 'This is a description of the artifact which will have a default generated by the scanner and then can be modified by the user to be more appropriate for their use';
COMMENT ON COLUMN "TEST"."MD_FILE_ARTIFACTS"."PRIORITY" IS 'The priority is set for the TODOs so they can be managed by the user';
COMMENT ON TABLE "TEST"."MD_FILE_ARTIFACTS" IS 'Holds a tuple for each interesting thing the scanner finds in a file';

-- ----------------------------
-- Table structure for MD_GROUPS
-- ----------------------------
DROP TABLE "TEST"."MD_GROUPS";
CREATE TABLE "TEST"."MD_GROUPS" (
  "ID" NUMBER NOT NULL,
  "SCHEMA_ID_FK" NUMBER NOT NULL,
  "GROUP_NAME" VARCHAR2(4000 BYTE),
  "GROUP_FLAG" CHAR(1 BYTE),
  "NATIVE_SQL" CLOB,
  "NATIVE_KEY" VARCHAR2(4000 BYTE),
  "COMMENTS" VARCHAR2(4000 BYTE),
  "SECURITY_GROUP_ID" NUMBER DEFAULT 0  NOT NULL,
  "CREATED_ON" DATE DEFAULT sysdate  NOT NULL,
  "CREATED_BY" VARCHAR2(255 BYTE),
  "LAST_UPDATED_ON" DATE,
  "LAST_UPDATED_BY" VARCHAR2(255 BYTE)
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;
COMMENT ON COLUMN "TEST"."MD_GROUPS"."ID" IS 'Primary Key';
COMMENT ON COLUMN "TEST"."MD_GROUPS"."SCHEMA_ID_FK" IS 'Schema in which this object belongs //PARENTFIELD';
COMMENT ON COLUMN "TEST"."MD_GROUPS"."GROUP_NAME" IS 'Name of the group //OBJECTNAME';
COMMENT ON COLUMN "TEST"."MD_GROUPS"."GROUP_FLAG" IS 'This is a flag to signify a group or a role.  If this is ''R'' it means the group is known as a Role.  Any other value means it is known as a group.';
COMMENT ON COLUMN "TEST"."MD_GROUPS"."NATIVE_SQL" IS 'SQL Used to generate this object at source';
COMMENT ON COLUMN "TEST"."MD_GROUPS"."NATIVE_KEY" IS 'Unique id for this object at source';
COMMENT ON TABLE "TEST"."MD_GROUPS" IS 'Groups of users in a schema';

-- ----------------------------
-- Table structure for MD_GROUP_MEMBERS
-- ----------------------------
DROP TABLE "TEST"."MD_GROUP_MEMBERS";
CREATE TABLE "TEST"."MD_GROUP_MEMBERS" (
  "ID" NUMBER NOT NULL,
  "GROUP_ID_FK" NUMBER NOT NULL,
  "USER_ID_FK" NUMBER,
  "GROUP_MEMBER_ID_FK" NUMBER,
  "SECURITY_GROUP_ID" NUMBER DEFAULT 0  NOT NULL,
  "CREATED_ON" DATE DEFAULT sysdate  NOT NULL,
  "CREATED_BY" VARCHAR2(255 BYTE),
  "LAST_UPDATED_ON" DATE,
  "LAST_UPDATED_BY" VARCHAR2(255 BYTE)
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;
COMMENT ON COLUMN "TEST"."MD_GROUP_MEMBERS"."ID" IS 'Primary Key';
COMMENT ON COLUMN "TEST"."MD_GROUP_MEMBERS"."USER_ID_FK" IS 'Id of member';
COMMENT ON COLUMN "TEST"."MD_GROUP_MEMBERS"."GROUP_MEMBER_ID_FK" IS 'groups can be members of groups';
COMMENT ON TABLE "TEST"."MD_GROUP_MEMBERS" IS 'This table is used to store the members of a group.';

-- ----------------------------
-- Table structure for MD_GROUP_PRIVILEGES
-- ----------------------------
DROP TABLE "TEST"."MD_GROUP_PRIVILEGES";
CREATE TABLE "TEST"."MD_GROUP_PRIVILEGES" (
  "ID" NUMBER NOT NULL,
  "GROUP_ID_FK" NUMBER NOT NULL,
  "PRIVILEGE_ID_FK" NUMBER NOT NULL,
  "SECURITY_GROUP_ID" NUMBER DEFAULT 0  NOT NULL,
  "CREATED_ON" DATE DEFAULT sysdate  NOT NULL,
  "CREATED_BY" VARCHAR2(255 BYTE),
  "LAST_UPDATED_ON" DATE,
  "LAST_UPDATED_BY" VARCHAR2(255 BYTE)
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;
COMMENT ON TABLE "TEST"."MD_GROUP_PRIVILEGES" IS 'This table stores the privileges granted to a group (or role)';

-- ----------------------------
-- Table structure for MD_INDEXES
-- ----------------------------
DROP TABLE "TEST"."MD_INDEXES";
CREATE TABLE "TEST"."MD_INDEXES" (
  "ID" NUMBER NOT NULL,
  "INDEX_TYPE" VARCHAR2(4000 BYTE),
  "TABLE_ID_FK" NUMBER NOT NULL,
  "INDEX_NAME" VARCHAR2(4000 BYTE),
  "NATIVE_SQL" CLOB,
  "NATIVE_KEY" VARCHAR2(4000 BYTE),
  "COMMENTS" VARCHAR2(4000 BYTE),
  "SECURITY_GROUP_ID" NUMBER DEFAULT 0  NOT NULL,
  "CREATED_ON" DATE DEFAULT sysdate  NOT NULL,
  "CREATED_BY" VARCHAR2(255 BYTE),
  "LAST_UPDATED_ON" DATE,
  "LAST_UPDATED_BY" VARCHAR2(4000 BYTE)
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;
COMMENT ON COLUMN "TEST"."MD_INDEXES"."ID" IS 'Primary Key';
COMMENT ON COLUMN "TEST"."MD_INDEXES"."INDEX_TYPE" IS 'Type of the index e.g. PRIMARY';
COMMENT ON COLUMN "TEST"."MD_INDEXES"."TABLE_ID_FK" IS 'Table that this index is on //PARENTFIELD';
COMMENT ON COLUMN "TEST"."MD_INDEXES"."INDEX_NAME" IS 'Name of the index //OBJECTNAME';
COMMENT ON COLUMN "TEST"."MD_INDEXES"."NATIVE_SQL" IS 'SQL used to create the index at source';
COMMENT ON COLUMN "TEST"."MD_INDEXES"."NATIVE_KEY" IS 'A unique identifier for this object at the source';
COMMENT ON TABLE "TEST"."MD_INDEXES" IS 'This table is used to store information about the indexes in a schema';

-- ----------------------------
-- Table structure for MD_INDEX_DETAILS
-- ----------------------------
DROP TABLE "TEST"."MD_INDEX_DETAILS";
CREATE TABLE "TEST"."MD_INDEX_DETAILS" (
  "ID" NUMBER NOT NULL,
  "INDEX_ID_FK" NUMBER NOT NULL,
  "COLUMN_ID_FK" NUMBER NOT NULL,
  "INDEX_PORTION" NUMBER,
  "DETAIL_ORDER" NUMBER NOT NULL,
  "SECURITY_GROUP_ID" NUMBER DEFAULT 0  NOT NULL,
  "CREATED_ON" DATE DEFAULT sysdate  NOT NULL,
  "CREATED_BY" VARCHAR2(255 BYTE),
  "LAST_UPDATED_ON" DATE,
  "LAST_UPDATED_BY" VARCHAR2(255 BYTE)
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;
COMMENT ON COLUMN "TEST"."MD_INDEX_DETAILS"."INDEX_ID_FK" IS 'The index to which this detail belongs. //PARENTFIELD';
COMMENT ON COLUMN "TEST"."MD_INDEX_DETAILS"."INDEX_PORTION" IS 'To support indexing on part of a field';
COMMENT ON TABLE "TEST"."MD_INDEX_DETAILS" IS 'This table stores the details of an index.  It shows what columns are "part" of the index.';

-- ----------------------------
-- Table structure for MD_MIGR_DEPENDENCY
-- ----------------------------
DROP TABLE "TEST"."MD_MIGR_DEPENDENCY";
CREATE TABLE "TEST"."MD_MIGR_DEPENDENCY" (
  "ID" NUMBER NOT NULL,
  "CONNECTION_ID_FK" NUMBER NOT NULL,
  "PARENT_ID" NUMBER NOT NULL,
  "CHILD_ID" NUMBER NOT NULL,
  "PARENT_OBJECT_TYPE" VARCHAR2(4000 BYTE) NOT NULL,
  "CHILD_OBJECT_TYPE" VARCHAR2(4000 BYTE) NOT NULL,
  "SECURITY_GROUP_ID" NUMBER DEFAULT 0  NOT NULL,
  "CREATED_ON" DATE DEFAULT sysdate  NOT NULL,
  "CREATED_BY" VARCHAR2(255 BYTE),
  "LAST_UPDATED_ON" DATE,
  "LAST_UPDATED_BY" VARCHAR2(255 BYTE)
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;
COMMENT ON COLUMN "TEST"."MD_MIGR_DEPENDENCY"."CONNECTION_ID_FK" IS 'The connection that this exists in //PARENTFIELD';

-- ----------------------------
-- Table structure for MD_MIGR_PARAMETER
-- ----------------------------
DROP TABLE "TEST"."MD_MIGR_PARAMETER";
CREATE TABLE "TEST"."MD_MIGR_PARAMETER" (
  "ID" NUMBER NOT NULL,
  "CONNECTION_ID_FK" NUMBER NOT NULL,
  "OBJECT_ID" NUMBER NOT NULL,
  "OBJECT_TYPE" VARCHAR2(4000 BYTE) NOT NULL,
  "PARAM_EXISTING" NUMBER NOT NULL,
  "PARAM_ORDER" NUMBER NOT NULL,
  "PARAM_NAME" VARCHAR2(4000 BYTE) NOT NULL,
  "PARAM_TYPE" VARCHAR2(4000 BYTE) NOT NULL,
  "PARAM_DATA_TYPE" VARCHAR2(4000 BYTE) NOT NULL,
  "PERCISION" NUMBER,
  "SCALE" NUMBER,
  "NULLABLE" CHAR(1 BYTE) NOT NULL,
  "DEFAULT_VALUE" VARCHAR2(4000 BYTE),
  "SECURITY_GROUP_ID" NUMBER DEFAULT 0  NOT NULL,
  "CREATED_ON" DATE DEFAULT sysdate  NOT NULL,
  "CREATED_BY" VARCHAR2(255 BYTE),
  "LAST_UPDATED_ON" DATE,
  "LAST_UPDATED_BY" VARCHAR2(255 BYTE)
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;
COMMENT ON COLUMN "TEST"."MD_MIGR_PARAMETER"."CONNECTION_ID_FK" IS 'the connection in which this belongs //PARENTFIELD';
COMMENT ON COLUMN "TEST"."MD_MIGR_PARAMETER"."PARAM_EXISTING" IS '1 represents a new parameter for PL/SQL that was not present in the origional. 0 represents a n existing parameter that was present in the origional';
COMMENT ON COLUMN "TEST"."MD_MIGR_PARAMETER"."PARAM_ORDER" IS 'IF -1 THEN THIS PARAM IS A RETURN PARAMETER. 1 WILL BE THE FIRST PARAMETER IN THE PARAMETER LIST';

-- ----------------------------
-- Table structure for MD_MIGR_WEAKDEP
-- ----------------------------
DROP TABLE "TEST"."MD_MIGR_WEAKDEP";
CREATE TABLE "TEST"."MD_MIGR_WEAKDEP" (
  "ID" NUMBER NOT NULL,
  "CONNECTION_ID_FK" NUMBER NOT NULL,
  "SCHEMA_ID_FK" NUMBER NOT NULL,
  "PARENT_ID" NUMBER NOT NULL,
  "CHILD_NAME" VARCHAR2(4000 BYTE) NOT NULL,
  "PARENT_TYPE" VARCHAR2(4000 BYTE) NOT NULL,
  "CHILD_TYPE" VARCHAR2(4000 BYTE) NOT NULL,
  "SECURITY_GROUP_ID" NUMBER DEFAULT 0  NOT NULL,
  "CREATED_ON" DATE DEFAULT sysdate  NOT NULL,
  "CREATED_BY" VARCHAR2(255 BYTE),
  "LAST_UPDATED_ON" DATE,
  "LAST_UPDATED_BY" VARCHAR2(255 BYTE)
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;
COMMENT ON COLUMN "TEST"."MD_MIGR_WEAKDEP"."CHILD_NAME" IS 'name of the child,  as weak dependencies dont have reference to child id';
COMMENT ON COLUMN "TEST"."MD_MIGR_WEAKDEP"."PARENT_TYPE" IS 'MD_<tablename>';
COMMENT ON COLUMN "TEST"."MD_MIGR_WEAKDEP"."CHILD_TYPE" IS 'Generic Type (not MD_<tablename>)';

-- ----------------------------
-- Table structure for MD_NUMROW$SOURCE
-- ----------------------------
DROP TABLE "TEST"."MD_NUMROW$SOURCE";
CREATE TABLE "TEST"."MD_NUMROW$SOURCE" (
  "NUMROWS" NUMBER(10,0),
  "NAME" VARCHAR2(4000 BYTE),
  "OBJID" NUMBER(10,0)
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for MD_NUMROW$TARGET
-- ----------------------------
DROP TABLE "TEST"."MD_NUMROW$TARGET";
CREATE TABLE "TEST"."MD_NUMROW$TARGET" (
  "NUMROWS" NUMBER(10,0),
  "NAME" VARCHAR2(4000 BYTE),
  "OBJID" NUMBER(10,0)
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for MD_OTHER_OBJECTS
-- ----------------------------
DROP TABLE "TEST"."MD_OTHER_OBJECTS";
CREATE TABLE "TEST"."MD_OTHER_OBJECTS" (
  "ID" NUMBER NOT NULL,
  "SCHEMA_ID_FK" NUMBER NOT NULL,
  "NAME" VARCHAR2(4000 BYTE),
  "NATIVE_SQL" CLOB,
  "NATIVE_KEY" VARCHAR2(4000 BYTE),
  "COMMENTS" VARCHAR2(4000 BYTE),
  "SECURITY_GROUP_ID" NUMBER DEFAULT 0  NOT NULL,
  "CREATED_ON" DATE DEFAULT sysdate  NOT NULL,
  "CREATED_BY" VARCHAR2(255 BYTE),
  "LAST_UPDATED_ON" DATE,
  "LAST_UPDATED_BY" VARCHAR2(255 BYTE)
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;
COMMENT ON COLUMN "TEST"."MD_OTHER_OBJECTS"."ID" IS 'Primary Key';
COMMENT ON COLUMN "TEST"."MD_OTHER_OBJECTS"."SCHEMA_ID_FK" IS 'Schema to which this object blongs. //PARENTFIELD';
COMMENT ON COLUMN "TEST"."MD_OTHER_OBJECTS"."NAME" IS 'Name of this object //OBJECTNAME';
COMMENT ON COLUMN "TEST"."MD_OTHER_OBJECTS"."NATIVE_SQL" IS 'The native SQL used to create this object';
COMMENT ON COLUMN "TEST"."MD_OTHER_OBJECTS"."NATIVE_KEY" IS 'A key that identifies this object at source.';
COMMENT ON TABLE "TEST"."MD_OTHER_OBJECTS" IS 'For storing objects that don''''t belong anywhere else';

-- ----------------------------
-- Table structure for MD_PACKAGES
-- ----------------------------
DROP TABLE "TEST"."MD_PACKAGES";
CREATE TABLE "TEST"."MD_PACKAGES" (
  "ID" NUMBER NOT NULL,
  "SCHEMA_ID_FK" NUMBER NOT NULL,
  "NAME" VARCHAR2(4000 BYTE) NOT NULL,
  "PACKAGE_HEADER" CLOB,
  "NATIVE_SQL" CLOB,
  "NATIVE_KEY" VARCHAR2(4000 BYTE),
  "LANGUAGE" VARCHAR2(40 BYTE) NOT NULL,
  "COMMENTS" VARCHAR2(4000 BYTE),
  "SECURITY_GROUP_ID" NUMBER DEFAULT 0  NOT NULL,
  "CREATED_ON" DATE DEFAULT sysdate  NOT NULL,
  "CREATED_BY" VARCHAR2(255 BYTE),
  "LAST_UPDATED_ON" DATE,
  "LAST_UPDATED_BY" VARCHAR2(255 BYTE)
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;
COMMENT ON COLUMN "TEST"."MD_PACKAGES"."ID" IS 'Primary Key';
COMMENT ON COLUMN "TEST"."MD_PACKAGES"."SCHEMA_ID_FK" IS 'the schema in which this package resides //PARENTFIELD';
COMMENT ON COLUMN "TEST"."MD_PACKAGES"."NAME" IS 'Name of this package //OBJECTNAME';
COMMENT ON COLUMN "TEST"."MD_PACKAGES"."NATIVE_SQL" IS 'The SQL used to create this package at source';
COMMENT ON COLUMN "TEST"."MD_PACKAGES"."NATIVE_KEY" IS 'A unique identifer for this object at source.';
COMMENT ON COLUMN "TEST"."MD_PACKAGES"."LANGUAGE" IS '//PUBLIC';
COMMENT ON TABLE "TEST"."MD_PACKAGES" IS 'For storing packages';

-- ----------------------------
-- Table structure for MD_PARTITIONS
-- ----------------------------
DROP TABLE "TEST"."MD_PARTITIONS";
CREATE TABLE "TEST"."MD_PARTITIONS" (
  "ID" NUMBER NOT NULL,
  "TABLE_ID_FK" NUMBER NOT NULL,
  "NATIVE_SQL" CLOB,
  "PARTITION_EXPRESSION" VARCHAR2(4000 BYTE),
  "COMMENTS" VARCHAR2(4000 BYTE),
  "SECURITY_GROUP_ID" NUMBER DEFAULT 0  NOT NULL,
  "CREATED_BY" VARCHAR2(255 BYTE),
  "CREATED_ON" DATE DEFAULT sysdate  NOT NULL,
  "LAST_UPDATED_BY" VARCHAR2(255 BYTE),
  "LAST_UPDATED_ON" DATE
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;
COMMENT ON COLUMN "TEST"."MD_PARTITIONS"."ID" IS 'Primary Key';
COMMENT ON COLUMN "TEST"."MD_PARTITIONS"."TABLE_ID_FK" IS 'The table that this partition refers to //PARENTFIELD';
COMMENT ON COLUMN "TEST"."MD_PARTITIONS"."NATIVE_SQL" IS 'The SQL used to create this partition at source';
COMMENT ON COLUMN "TEST"."MD_PARTITIONS"."PARTITION_EXPRESSION" IS 'The partition expression';
COMMENT ON TABLE "TEST"."MD_PARTITIONS" IS 'Partition information is stored in this table.';

-- ----------------------------
-- Table structure for MD_PRIVILEGES
-- ----------------------------
DROP TABLE "TEST"."MD_PRIVILEGES";
CREATE TABLE "TEST"."MD_PRIVILEGES" (
  "ID" NUMBER NOT NULL,
  "SCHEMA_ID_FK" NUMBER NOT NULL,
  "PRIVILEGE_NAME" VARCHAR2(4000 BYTE) NOT NULL,
  "PRIVELEGE_OBJECT_ID" NUMBER,
  "PRIVELEGEOBJECTTYPE" VARCHAR2(4000 BYTE) NOT NULL,
  "PRIVELEGE_TYPE" VARCHAR2(4000 BYTE) NOT NULL,
  "ADMIN_OPTION" CHAR(1 BYTE),
  "NATIVE_SQL" CLOB NOT NULL,
  "NATIVE_KEY" VARCHAR2(4000 BYTE),
  "COMMENTS" VARCHAR2(4000 BYTE),
  "SECURITY_GROUP_ID" NUMBER DEFAULT 0  NOT NULL,
  "CREATED_ON" DATE DEFAULT sysdate  NOT NULL,
  "CREATED_BY" VARCHAR2(255 BYTE),
  "LAST_UPDATED_ON" DATE,
  "LAST_UPDATED_BY" VARCHAR2(255 BYTE)
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;
COMMENT ON COLUMN "TEST"."MD_PRIVILEGES"."ID" IS 'Primary Key';
COMMENT ON COLUMN "TEST"."MD_PRIVILEGES"."SCHEMA_ID_FK" IS 'The schema to which this object belongs //PARENTFIELD';
COMMENT ON COLUMN "TEST"."MD_PRIVILEGES"."PRIVILEGE_NAME" IS 'The name of the privilege //OBJECTNAME';
COMMENT ON COLUMN "TEST"."MD_PRIVILEGES"."PRIVELEGE_OBJECT_ID" IS 'This references the table, view, etc on which the privelege exists.  This can be NULL for things like system wide privileges';
COMMENT ON COLUMN "TEST"."MD_PRIVILEGES"."PRIVELEGEOBJECTTYPE" IS 'The type the privelege is on (e.g. INDEX)';
COMMENT ON COLUMN "TEST"."MD_PRIVILEGES"."PRIVELEGE_TYPE" IS 'e.g.select';
COMMENT ON COLUMN "TEST"."MD_PRIVILEGES"."ADMIN_OPTION" IS 'Flag to show if this was granted with admin option.  ''Y'' means it was granted with admin option ''N'' means it was NOT granted with admin option.  NULL means not applicable (e.g. not known, not supported by source platform, etc.)';
COMMENT ON COLUMN "TEST"."MD_PRIVILEGES"."NATIVE_SQL" IS 'The SQL used to create this privilege at source';
COMMENT ON COLUMN "TEST"."MD_PRIVILEGES"."NATIVE_KEY" IS 'An identifier for this object at source.';
COMMENT ON TABLE "TEST"."MD_PRIVILEGES" IS 'This table stores privilege information';

-- ----------------------------
-- Table structure for MD_PROJECTS
-- ----------------------------
DROP TABLE "TEST"."MD_PROJECTS";
CREATE TABLE "TEST"."MD_PROJECTS" (
  "ID" NUMBER NOT NULL,
  "PROJECT_NAME" VARCHAR2(4000 BYTE) NOT NULL,
  "COMMENTS" VARCHAR2(4000 BYTE),
  "SECURITY_GROUP_ID" NUMBER DEFAULT 0  NOT NULL,
  "CREATED_ON" DATE DEFAULT sysdate  NOT NULL,
  "CREATED_BY" VARCHAR2(255 BYTE),
  "LAST_UPDATED_ON" DATE,
  "LAST_UPDATED_BY" VARCHAR2(255 BYTE)
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;
COMMENT ON COLUMN "TEST"."MD_PROJECTS"."ID" IS 'Primary key';
COMMENT ON COLUMN "TEST"."MD_PROJECTS"."PROJECT_NAME" IS 'Name of the project //OBJECTNAME';
COMMENT ON TABLE "TEST"."MD_PROJECTS" IS 'This is a top level container for a set of connections.';

-- ----------------------------
-- Table structure for MD_REGISTRY
-- ----------------------------
DROP TABLE "TEST"."MD_REGISTRY";
CREATE TABLE "TEST"."MD_REGISTRY" (
  "OBJECT_TYPE" VARCHAR2(30 BYTE) NOT NULL,
  "OBJECT_NAME" VARCHAR2(30 BYTE) NOT NULL,
  "DESC_OBJECT_NAME" VARCHAR2(30 BYTE)
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;
COMMENT ON TABLE "TEST"."MD_REGISTRY" IS 'Table to store information on the MD_ repository.  This lists the objects to be dropped if you wish to remove the repository';

-- ----------------------------
-- Table structure for MD_REPOVERSIONS
-- ----------------------------
DROP TABLE "TEST"."MD_REPOVERSIONS";
CREATE TABLE "TEST"."MD_REPOVERSIONS" (
  "REVISION" NUMBER NOT NULL
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;
COMMENT ON TABLE "TEST"."MD_REPOVERSIONS" IS 'This table is used to version this schema for future requirements.';

-- ----------------------------
-- Table structure for MD_SCHEMAS
-- ----------------------------
DROP TABLE "TEST"."MD_SCHEMAS";
CREATE TABLE "TEST"."MD_SCHEMAS" (
  "ID" NUMBER NOT NULL,
  "CATALOG_ID_FK" NUMBER NOT NULL,
  "NAME" VARCHAR2(4000 BYTE),
  "TYPE" CHAR(1 BYTE),
  "CHARACTER_SET" VARCHAR2(4000 BYTE),
  "VERSION_TAG" VARCHAR2(40 BYTE),
  "NATIVE_SQL" CLOB,
  "NATIVE_KEY" VARCHAR2(4000 BYTE),
  "COMMENTS" VARCHAR2(4000 BYTE),
  "SECURITY_GROUP_ID" NUMBER DEFAULT 0  NOT NULL,
  "CREATED_ON" DATE DEFAULT sysdate  NOT NULL,
  "CREATED_BY" VARCHAR2(255 BYTE),
  "LAST_UPDATED_ON" DATE,
  "LAST_UPDATED_BY" VARCHAR2(255 BYTE)
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;
COMMENT ON COLUMN "TEST"."MD_SCHEMAS"."ID" IS 'Primary Key';
COMMENT ON COLUMN "TEST"."MD_SCHEMAS"."CATALOG_ID_FK" IS 'Catalog to which this schema blongs //PARENTFIELD';
COMMENT ON COLUMN "TEST"."MD_SCHEMAS"."NAME" IS 'Name of the schema //OBJECTNAME';
COMMENT ON COLUMN "TEST"."MD_SCHEMAS"."TYPE" IS 'Type of this schema.  Eaxamples are ''CAPTURED'' OR ''CONVERTED''';
COMMENT ON COLUMN "TEST"."MD_SCHEMAS"."CHARACTER_SET" IS 'The characterset of this schema';
COMMENT ON COLUMN "TEST"."MD_SCHEMAS"."VERSION_TAG" IS 'A version string that can be used for tagging/baseling a schema';
COMMENT ON COLUMN "TEST"."MD_SCHEMAS"."NATIVE_SQL" IS 'The native SQL used to create this schema';
COMMENT ON COLUMN "TEST"."MD_SCHEMAS"."NATIVE_KEY" IS 'A unique identifier that this schema is known as in its source state.';
COMMENT ON TABLE "TEST"."MD_SCHEMAS" IS 'This is the holder for schemas';

-- ----------------------------
-- Table structure for MD_SEQUENCES
-- ----------------------------
DROP TABLE "TEST"."MD_SEQUENCES";
CREATE TABLE "TEST"."MD_SEQUENCES" (
  "ID" NUMBER NOT NULL,
  "SCHEMA_ID_FK" NUMBER NOT NULL,
  "NAME" VARCHAR2(4000 BYTE) NOT NULL,
  "SEQ_START" NUMBER NOT NULL,
  "INCR" NUMBER DEFAULT 1  NOT NULL,
  "NATIVE_SQL" CLOB,
  "NATIVE_KEY" VARCHAR2(4000 BYTE),
  "COMMENTS" VARCHAR2(4000 BYTE),
  "SECURITY_GROUP_ID" NUMBER DEFAULT 0  NOT NULL,
  "CREATED_ON" DATE DEFAULT sysdate  NOT NULL,
  "CREATED_BY" VARCHAR2(255 BYTE) DEFAULT '0'  NOT NULL,
  "LAST_UPDATED_ON" DATE,
  "LAST_UPDATED_BY" VARCHAR2(255 BYTE)
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;
COMMENT ON COLUMN "TEST"."MD_SEQUENCES"."ID" IS 'Primary Key';
COMMENT ON COLUMN "TEST"."MD_SEQUENCES"."SCHEMA_ID_FK" IS 'The schema to which this object belongs. //PARENTFIELD';
COMMENT ON COLUMN "TEST"."MD_SEQUENCES"."NAME" IS 'Name of this sequence //OBJECTNAME';
COMMENT ON COLUMN "TEST"."MD_SEQUENCES"."SEQ_START" IS 'Starting point of the sequence';
COMMENT ON COLUMN "TEST"."MD_SEQUENCES"."INCR" IS 'Increment value of the sequence';
COMMENT ON COLUMN "TEST"."MD_SEQUENCES"."NATIVE_SQL" IS 'SQL used to create this object at source';
COMMENT ON COLUMN "TEST"."MD_SEQUENCES"."NATIVE_KEY" IS 'Identifier for this object at source.';
COMMENT ON TABLE "TEST"."MD_SEQUENCES" IS 'For storing information on sequences.';

-- ----------------------------
-- Table structure for MD_STORED_PROGRAMS
-- ----------------------------
DROP TABLE "TEST"."MD_STORED_PROGRAMS";
CREATE TABLE "TEST"."MD_STORED_PROGRAMS" (
  "ID" NUMBER NOT NULL,
  "SCHEMA_ID_FK" NUMBER NOT NULL,
  "PROGRAMTYPE" VARCHAR2(20 BYTE),
  "NAME" VARCHAR2(4000 BYTE),
  "PACKAGE_ID_FK" NUMBER,
  "NATIVE_SQL" CLOB,
  "NATIVE_KEY" VARCHAR2(4000 BYTE),
  "LANGUAGE" VARCHAR2(40 BYTE) NOT NULL,
  "COMMENTS" VARCHAR2(4000 BYTE),
  "LINECOUNT" NUMBER,
  "SECURITY_GROUP_ID" NUMBER DEFAULT 0  NOT NULL,
  "CREATED_ON" DATE DEFAULT sysdate  NOT NULL,
  "CREATED_BY" VARCHAR2(255 BYTE),
  "LAST_UPDATED_ON" DATE,
  "LAST_UPDATED_BY" VARCHAR2(255 BYTE)
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;
COMMENT ON COLUMN "TEST"."MD_STORED_PROGRAMS"."ID" IS 'Primary Key';
COMMENT ON COLUMN "TEST"."MD_STORED_PROGRAMS"."SCHEMA_ID_FK" IS 'Schema to which this object belongs.  Note that the PACKAGE_ID_FK (if present also leads us to the relevant schema), however a stored program may or may not belong in a package.  If it is in a package, then the SCHEMA_ID_FK and the SCHEME_ID_FK in the parent package should match //PARENTFIELD';
COMMENT ON COLUMN "TEST"."MD_STORED_PROGRAMS"."PROGRAMTYPE" IS 'Java/TSQL/PLSQL, etc.';
COMMENT ON COLUMN "TEST"."MD_STORED_PROGRAMS"."NAME" IS 'Name of the stored program //OBJECTNAME';
COMMENT ON COLUMN "TEST"."MD_STORED_PROGRAMS"."PACKAGE_ID_FK" IS 'The package to which this object belongs';
COMMENT ON COLUMN "TEST"."MD_STORED_PROGRAMS"."NATIVE_SQL" IS 'The SQL used to create this object at source';
COMMENT ON COLUMN "TEST"."MD_STORED_PROGRAMS"."NATIVE_KEY" IS 'A unique indetifier for this object at source';
COMMENT ON COLUMN "TEST"."MD_STORED_PROGRAMS"."LANGUAGE" IS '//PUBLIC';
COMMENT ON TABLE "TEST"."MD_STORED_PROGRAMS" IS 'Container for stored programs.';

-- ----------------------------
-- Table structure for MD_SYNONYMS
-- ----------------------------
DROP TABLE "TEST"."MD_SYNONYMS";
CREATE TABLE "TEST"."MD_SYNONYMS" (
  "ID" NUMBER NOT NULL,
  "SCHEMA_ID_FK" NUMBER NOT NULL,
  "NAME" VARCHAR2(4000 BYTE) NOT NULL,
  "SYNONYM_FOR_ID" NUMBER NOT NULL,
  "FOR_OBJECT_TYPE" VARCHAR2(4000 BYTE) NOT NULL,
  "PRIVATE_VISIBILITY" CHAR(1 BYTE),
  "NATIVE_SQL" CLOB,
  "NATIVE_KEY" VARCHAR2(4000 BYTE),
  "COMMENTS" VARCHAR2(4000 BYTE),
  "SECURITY_GROUP_ID" NUMBER DEFAULT 0  NOT NULL,
  "CREATED_ON" DATE DEFAULT sysdate  NOT NULL,
  "CREATED_BY" VARCHAR2(255 BYTE),
  "LAST_UPDATED_ON" DATE,
  "LAST_UPDATED_BY" VARCHAR2(255 BYTE)
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;
COMMENT ON COLUMN "TEST"."MD_SYNONYMS"."ID" IS 'Primary Key';
COMMENT ON COLUMN "TEST"."MD_SYNONYMS"."SCHEMA_ID_FK" IS 'The schema to which this object belongs //PARENTFIELD';
COMMENT ON COLUMN "TEST"."MD_SYNONYMS"."NAME" IS 'Synonym name //OBJECTNAME';
COMMENT ON COLUMN "TEST"."MD_SYNONYMS"."SYNONYM_FOR_ID" IS 'What object this is a synonym for';
COMMENT ON COLUMN "TEST"."MD_SYNONYMS"."FOR_OBJECT_TYPE" IS 'The type this is a synonym for (e.g. INDEX)';
COMMENT ON COLUMN "TEST"."MD_SYNONYMS"."PRIVATE_VISIBILITY" IS 'Visibility - Private or Public.  If Private_visibility = ''Y'' means this is a private synonym.  Anything else means it is a public synonym';
COMMENT ON COLUMN "TEST"."MD_SYNONYMS"."NATIVE_SQL" IS 'The SQL used to create this object at source';
COMMENT ON COLUMN "TEST"."MD_SYNONYMS"."NATIVE_KEY" IS 'An identifier for this object at source.';
COMMENT ON TABLE "TEST"."MD_SYNONYMS" IS 'For storing synonym information.';

-- ----------------------------
-- Table structure for MD_TABLES
-- ----------------------------
DROP TABLE "TEST"."MD_TABLES";
CREATE TABLE "TEST"."MD_TABLES" (
  "ID" NUMBER NOT NULL,
  "SCHEMA_ID_FK" NUMBER NOT NULL,
  "TABLE_NAME" VARCHAR2(4000 BYTE) NOT NULL,
  "NATIVE_SQL" CLOB,
  "NATIVE_KEY" VARCHAR2(4000 BYTE),
  "QUALIFIED_NATIVE_NAME" VARCHAR2(4000 BYTE) NOT NULL,
  "COMMENTS" VARCHAR2(4000 BYTE),
  "SECURITY_GROUP_ID" NUMBER DEFAULT 0  NOT NULL,
  "CREATED_ON" DATE DEFAULT sysdate  NOT NULL,
  "CREATED_BY" VARCHAR2(255 BYTE),
  "LAST_UPDATED_ON" DATE,
  "LAST_UPDATED_BY" VARCHAR2(255 BYTE)
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;
COMMENT ON COLUMN "TEST"."MD_TABLES"."ID" IS 'Primary Key';
COMMENT ON COLUMN "TEST"."MD_TABLES"."SCHEMA_ID_FK" IS 'Schema in which this table resides //PARENTFIELD';
COMMENT ON COLUMN "TEST"."MD_TABLES"."TABLE_NAME" IS 'Name of the table //OBJECTNAME';
COMMENT ON COLUMN "TEST"."MD_TABLES"."NATIVE_SQL" IS 'SQL Used to create this table at soruce';
COMMENT ON COLUMN "TEST"."MD_TABLES"."NATIVE_KEY" IS 'Unique identifier for this table at source';
COMMENT ON TABLE "TEST"."MD_TABLES" IS 'Table used to store information about tables.';

-- ----------------------------
-- Table structure for MD_TABLESPACES
-- ----------------------------
DROP TABLE "TEST"."MD_TABLESPACES";
CREATE TABLE "TEST"."MD_TABLESPACES" (
  "ID" NUMBER NOT NULL,
  "SCHEMA_ID_FK" NUMBER NOT NULL,
  "TABLESPACE_NAME" VARCHAR2(4000 BYTE),
  "NATIVE_SQL" CLOB,
  "NATIVE_KEY" VARCHAR2(4000 BYTE),
  "COMMENTS" VARCHAR2(4000 BYTE),
  "SECURITY_GROUP_ID" NUMBER DEFAULT 0  NOT NULL,
  "CREATED_ON" DATE DEFAULT sysdate  NOT NULL,
  "CREATED_BY" VARCHAR2(255 BYTE),
  "LAST_UPDATED_ON" DATE,
  "LAST_UPDATED_BY" VARCHAR2(255 BYTE)
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;
COMMENT ON COLUMN "TEST"."MD_TABLESPACES"."ID" IS 'Primary Key';
COMMENT ON COLUMN "TEST"."MD_TABLESPACES"."SCHEMA_ID_FK" IS 'Schema to which this tablespace belongs //PARENTFIELD';
COMMENT ON COLUMN "TEST"."MD_TABLESPACES"."TABLESPACE_NAME" IS 'Name of the table space //OBJECTNAME';
COMMENT ON COLUMN "TEST"."MD_TABLESPACES"."NATIVE_SQL" IS 'The SQL used to create this tablespace';
COMMENT ON COLUMN "TEST"."MD_TABLESPACES"."NATIVE_KEY" IS 'A unique identifier for this object at source';
COMMENT ON TABLE "TEST"."MD_TABLESPACES" IS 'For storing information about tablespaces.';

-- ----------------------------
-- Table structure for MD_TRIGGERS
-- ----------------------------
DROP TABLE "TEST"."MD_TRIGGERS";
CREATE TABLE "TEST"."MD_TRIGGERS" (
  "ID" NUMBER NOT NULL,
  "TABLE_OR_VIEW_ID_FK" NUMBER NOT NULL,
  "TRIGGER_ON_FLAG" CHAR(1 BYTE) NOT NULL,
  "TRIGGER_NAME" VARCHAR2(4000 BYTE),
  "TRIGGER_TIMING" VARCHAR2(4000 BYTE),
  "TRIGGER_OPERATION" VARCHAR2(4000 BYTE),
  "TRIGGER_EVENT" VARCHAR2(4000 BYTE),
  "NATIVE_SQL" CLOB,
  "NATIVE_KEY" VARCHAR2(4000 BYTE),
  "LANGUAGE" VARCHAR2(40 BYTE) NOT NULL,
  "COMMENTS" VARCHAR2(4000 BYTE),
  "LINECOUNT" NUMBER,
  "SECURITY_GROUP_ID" NUMBER DEFAULT 0  NOT NULL,
  "CREATED_ON" DATE DEFAULT sysdate  NOT NULL,
  "CREATED_BY" VARCHAR2(255 BYTE),
  "LAST_UPDATED_ON" DATE,
  "LAST_UPDATED_BY" VARCHAR2(255 BYTE)
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;
COMMENT ON COLUMN "TEST"."MD_TRIGGERS"."ID" IS 'Primary Key';
COMMENT ON COLUMN "TEST"."MD_TRIGGERS"."TABLE_OR_VIEW_ID_FK" IS 'Table on which this trigger fires';
COMMENT ON COLUMN "TEST"."MD_TRIGGERS"."TRIGGER_ON_FLAG" IS 'Flag to show iif the trigger is on a table or a view.  If it is a table this should be ''T''. If it is on a view this should be ''V''';
COMMENT ON COLUMN "TEST"."MD_TRIGGERS"."TRIGGER_NAME" IS 'Name of the trigger //OBJECTNAME';
COMMENT ON COLUMN "TEST"."MD_TRIGGERS"."TRIGGER_TIMING" IS 'before, after ,etc.';
COMMENT ON COLUMN "TEST"."MD_TRIGGERS"."TRIGGER_OPERATION" IS 'insert, delete, etc.';
COMMENT ON COLUMN "TEST"."MD_TRIGGERS"."TRIGGER_EVENT" IS 'The actual trigger that gets fired ';
COMMENT ON COLUMN "TEST"."MD_TRIGGERS"."NATIVE_SQL" IS 'The full definition ';
COMMENT ON COLUMN "TEST"."MD_TRIGGERS"."NATIVE_KEY" IS 'UInique identifer for this object at source';
COMMENT ON COLUMN "TEST"."MD_TRIGGERS"."LANGUAGE" IS '//PUBLIC';
COMMENT ON TABLE "TEST"."MD_TRIGGERS" IS 'For storing information about triggers.';

-- ----------------------------
-- Table structure for MD_USERS
-- ----------------------------
DROP TABLE "TEST"."MD_USERS";
CREATE TABLE "TEST"."MD_USERS" (
  "ID" NUMBER NOT NULL,
  "SCHEMA_ID_FK" NUMBER NOT NULL,
  "USERNAME" VARCHAR2(4000 BYTE) NOT NULL,
  "PASSWORD" VARCHAR2(4000 BYTE),
  "NATIVE_SQL" CLOB,
  "NATIVE_KEY" VARCHAR2(4000 BYTE),
  "COMMENTS" VARCHAR2(4000 BYTE),
  "SECURITY_GROUP_ID" NUMBER DEFAULT 0  NOT NULL,
  "CREATED_ON" DATE DEFAULT sysdate  NOT NULL,
  "CREATED_BY" VARCHAR2(255 BYTE),
  "LAST_UPDATED_ON" DATE,
  "LAST_UPDATED_BY" VARCHAR2(255 BYTE)
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;
COMMENT ON COLUMN "TEST"."MD_USERS"."ID" IS 'Primary Key';
COMMENT ON COLUMN "TEST"."MD_USERS"."SCHEMA_ID_FK" IS 'Shema in which this object belongs //PARENTFIELD';
COMMENT ON COLUMN "TEST"."MD_USERS"."USERNAME" IS 'Username for login //OBJECTNAME';
COMMENT ON COLUMN "TEST"."MD_USERS"."PASSWORD" IS 'Password for login';
COMMENT ON COLUMN "TEST"."MD_USERS"."NATIVE_SQL" IS 'SQL Used to create this object at source';
COMMENT ON COLUMN "TEST"."MD_USERS"."NATIVE_KEY" IS 'Unique identifier for this object at source.';
COMMENT ON TABLE "TEST"."MD_USERS" IS 'User information.';

-- ----------------------------
-- Table structure for MD_USER_DEFINED_DATA_TYPES
-- ----------------------------
DROP TABLE "TEST"."MD_USER_DEFINED_DATA_TYPES";
CREATE TABLE "TEST"."MD_USER_DEFINED_DATA_TYPES" (
  "ID" NUMBER NOT NULL,
  "SCHEMA_ID_FK" NUMBER NOT NULL,
  "DATA_TYPE_NAME" VARCHAR2(4000 BYTE) NOT NULL,
  "DEFINITION" VARCHAR2(4000 BYTE) NOT NULL,
  "NATIVE_SQL" CLOB NOT NULL,
  "NATIVE_KEY" VARCHAR2(4000 BYTE),
  "COMMENTS" VARCHAR2(4000 BYTE),
  "SECURITY_GROUP_ID" NUMBER DEFAULT 0  NOT NULL,
  "CREATED_ON" DATE DEFAULT sysdate  NOT NULL,
  "CREATED_BY" VARCHAR2(255 BYTE),
  "LAST_UPDATED_ON" DATE,
  "LAST_UPDATED_BY" VARCHAR2(255 BYTE)
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;
COMMENT ON COLUMN "TEST"."MD_USER_DEFINED_DATA_TYPES"."ID" IS 'Primary Key';
COMMENT ON COLUMN "TEST"."MD_USER_DEFINED_DATA_TYPES"."SCHEMA_ID_FK" IS 'Schema to which this object blongs. //PARENTFIELD';
COMMENT ON COLUMN "TEST"."MD_USER_DEFINED_DATA_TYPES"."DATA_TYPE_NAME" IS 'The name of the data type //OBJECTNAME';
COMMENT ON COLUMN "TEST"."MD_USER_DEFINED_DATA_TYPES"."DEFINITION" IS 'The definition of the data type';
COMMENT ON COLUMN "TEST"."MD_USER_DEFINED_DATA_TYPES"."NATIVE_SQL" IS 'The native SQL used to create this object';
COMMENT ON COLUMN "TEST"."MD_USER_DEFINED_DATA_TYPES"."NATIVE_KEY" IS 'An unique identifier for this object at source.';
COMMENT ON TABLE "TEST"."MD_USER_DEFINED_DATA_TYPES" IS 'For storing information on user defined data types.';

-- ----------------------------
-- Table structure for MD_USER_PRIVILEGES
-- ----------------------------
DROP TABLE "TEST"."MD_USER_PRIVILEGES";
CREATE TABLE "TEST"."MD_USER_PRIVILEGES" (
  "ID" NUMBER NOT NULL,
  "USER_ID_FK" NUMBER NOT NULL,
  "PRIVILEGE_ID_FK" NUMBER,
  "SECURITY_GROUP_ID" NUMBER DEFAULT 0  NOT NULL,
  "CREATED_ON" DATE DEFAULT sysdate  NOT NULL,
  "CREATED_BY" VARCHAR2(255 BYTE),
  "LAST_UPDATED_ON" DATE,
  "LAST_UDPATED_BY" VARCHAR2(255 BYTE)
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;
COMMENT ON COLUMN "TEST"."MD_USER_PRIVILEGES"."ID" IS 'Primary Key';
COMMENT ON COLUMN "TEST"."MD_USER_PRIVILEGES"."USER_ID_FK" IS 'User';
COMMENT ON COLUMN "TEST"."MD_USER_PRIVILEGES"."PRIVILEGE_ID_FK" IS 'Privilege';
COMMENT ON TABLE "TEST"."MD_USER_PRIVILEGES" IS 'This table stores privileges granted to individual users';

-- ----------------------------
-- Table structure for MD_VIEWS
-- ----------------------------
DROP TABLE "TEST"."MD_VIEWS";
CREATE TABLE "TEST"."MD_VIEWS" (
  "ID" NUMBER NOT NULL,
  "SCHEMA_ID_FK" NUMBER NOT NULL,
  "VIEW_NAME" VARCHAR2(4000 BYTE),
  "NATIVE_SQL" CLOB,
  "NATIVE_KEY" VARCHAR2(4000 BYTE),
  "LANGUAGE" VARCHAR2(40 BYTE) NOT NULL,
  "COMMENTS" VARCHAR2(4000 BYTE),
  "LINECOUNT" NUMBER,
  "SECURITY_GROUP_ID" NUMBER DEFAULT 0  NOT NULL,
  "CREATED_ON" DATE DEFAULT sysdate  NOT NULL,
  "CREATED_BY" VARCHAR2(255 BYTE),
  "LAST_UPDATED_ON" DATE,
  "LAST_UPDATED_BY" VARCHAR2(255 BYTE)
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;
COMMENT ON COLUMN "TEST"."MD_VIEWS"."ID" IS 'Primary Key';
COMMENT ON COLUMN "TEST"."MD_VIEWS"."SCHEMA_ID_FK" IS 'The schema to which this obect blongs. //PARENTFIELD';
COMMENT ON COLUMN "TEST"."MD_VIEWS"."VIEW_NAME" IS 'The name of the view //OBJECTNAME';
COMMENT ON COLUMN "TEST"."MD_VIEWS"."NATIVE_SQL" IS 'The SQL used to create this object at source';
COMMENT ON COLUMN "TEST"."MD_VIEWS"."NATIVE_KEY" IS 'An identifier for this object at source.';
COMMENT ON COLUMN "TEST"."MD_VIEWS"."LANGUAGE" IS '//PUBLIC';
COMMENT ON TABLE "TEST"."MD_VIEWS" IS 'For storing information on views.';

-- ----------------------------
-- Table structure for MIGRLOG
-- ----------------------------
DROP TABLE "TEST"."MIGRLOG";
CREATE TABLE "TEST"."MIGRLOG" (
  "ID" NUMBER NOT NULL,
  "PARENT_LOG_ID" NUMBER,
  "LOG_DATE" TIMESTAMP(6) NOT NULL,
  "SEVERITY" NUMBER(4,0) NOT NULL,
  "LOGTEXT" VARCHAR2(4000 BYTE),
  "PHASE" VARCHAR2(100 BYTE),
  "REF_OBJECT_ID" NUMBER,
  "REF_OBJECT_TYPE" VARCHAR2(4000 BYTE),
  "CONNECTION_ID_FK" NUMBER
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for MIGR_DATATYPE_TRANSFORM_MAP
-- ----------------------------
DROP TABLE "TEST"."MIGR_DATATYPE_TRANSFORM_MAP";
CREATE TABLE "TEST"."MIGR_DATATYPE_TRANSFORM_MAP" (
  "ID" NUMBER NOT NULL,
  "PROJECT_ID_FK" NUMBER NOT NULL,
  "MAP_NAME" VARCHAR2(4000 BYTE),
  "SECURITY_GROUP_ID" NUMBER DEFAULT 0  NOT NULL,
  "CREATED_ON" DATE DEFAULT sysdate  NOT NULL,
  "CREATED_BY" VARCHAR2(255 BYTE),
  "LAST_UPDATED_ON" DATE,
  "LAST_UPDATED_BY" VARCHAR2(255 BYTE)
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;
COMMENT ON COLUMN "TEST"."MIGR_DATATYPE_TRANSFORM_MAP"."ID" IS 'Primary Key';
COMMENT ON COLUMN "TEST"."MIGR_DATATYPE_TRANSFORM_MAP"."PROJECT_ID_FK" IS '//PARENTFIELD';
COMMENT ON COLUMN "TEST"."MIGR_DATATYPE_TRANSFORM_MAP"."MAP_NAME" IS 'A name for the map';
COMMENT ON TABLE "TEST"."MIGR_DATATYPE_TRANSFORM_MAP" IS 'Table for storing data type maps.  A map is simply a collection of rules';

-- ----------------------------
-- Table structure for MIGR_DATATYPE_TRANSFORM_RULE
-- ----------------------------
DROP TABLE "TEST"."MIGR_DATATYPE_TRANSFORM_RULE";
CREATE TABLE "TEST"."MIGR_DATATYPE_TRANSFORM_RULE" (
  "ID" NUMBER NOT NULL,
  "MAP_ID_FK" NUMBER NOT NULL,
  "SOURCE_DATA_TYPE_NAME" VARCHAR2(4000 BYTE) NOT NULL,
  "SOURCE_PRECISION" NUMBER,
  "SOURCE_SCALE" NUMBER,
  "TARGET_DATA_TYPE_NAME" VARCHAR2(4000 BYTE) NOT NULL,
  "TARGET_PRECISION" NUMBER,
  "TARGET_SCALE" NUMBER,
  "SECURITY_GROUP_ID" NUMBER DEFAULT 0  NOT NULL,
  "CREATED_ON" DATE DEFAULT sysdate  NOT NULL,
  "CREATED_BY" VARCHAR2(255 BYTE),
  "LAST_UPDATED_ON" DATE,
  "LAST_UPDATED_BY" VARCHAR2(255 BYTE)
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;
COMMENT ON COLUMN "TEST"."MIGR_DATATYPE_TRANSFORM_RULE"."ID" IS 'Primary Key';
COMMENT ON COLUMN "TEST"."MIGR_DATATYPE_TRANSFORM_RULE"."MAP_ID_FK" IS 'The map to which this rule belongs //PARENTFIELD';
COMMENT ON COLUMN "TEST"."MIGR_DATATYPE_TRANSFORM_RULE"."SOURCE_DATA_TYPE_NAME" IS 'Source data type';
COMMENT ON COLUMN "TEST"."MIGR_DATATYPE_TRANSFORM_RULE"."SOURCE_PRECISION" IS 'Precison to match';
COMMENT ON COLUMN "TEST"."MIGR_DATATYPE_TRANSFORM_RULE"."SOURCE_SCALE" IS 'scale to match';
COMMENT ON COLUMN "TEST"."MIGR_DATATYPE_TRANSFORM_RULE"."TARGET_DATA_TYPE_NAME" IS 'data type name to transform to';
COMMENT ON COLUMN "TEST"."MIGR_DATATYPE_TRANSFORM_RULE"."TARGET_PRECISION" IS 'precision to map to ';
COMMENT ON COLUMN "TEST"."MIGR_DATATYPE_TRANSFORM_RULE"."TARGET_SCALE" IS 'scale to map to';

-- ----------------------------
-- Table structure for MIGR_GENERATION_ORDER
-- ----------------------------
DROP TABLE "TEST"."MIGR_GENERATION_ORDER";
CREATE TABLE "TEST"."MIGR_GENERATION_ORDER" (
  "ID" NUMBER NOT NULL,
  "CONNECTION_ID_FK" NUMBER NOT NULL,
  "OBJECT_ID" NUMBER NOT NULL,
  "OBJECT_TYPE" VARCHAR2(4000 BYTE) NOT NULL,
  "GENERATION_ORDER" NUMBER NOT NULL
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;
COMMENT ON COLUMN "TEST"."MIGR_GENERATION_ORDER"."CONNECTION_ID_FK" IS '//PARENTFIELD';

-- ----------------------------
-- Table structure for MYPAY
-- ----------------------------
DROP TABLE "TEST"."MYPAY";
CREATE TABLE "TEST"."MYPAY" (
  "MYPAYB" VARCHAR2(500 BYTE),
  "MYPAYA" VARCHAR2(700 BYTE),
  "MYPAYZ" VARCHAR2(200 BYTE),
  "MYPAYH" VARCHAR2(500 BYTE),
  "MYPAYE" VARCHAR2(100 BYTE),
  "MYPAYA2" VARCHAR2(700 BYTE),
  "MYPAYM" VARCHAR2(200 BYTE),
  "MYPAYID" VARCHAR2(200 BYTE)
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;
COMMENT ON COLUMN "TEST"."MYPAY"."MYPAYB" IS '开户行';
COMMENT ON COLUMN "TEST"."MYPAY"."MYPAYA" IS '银行地址';
COMMENT ON COLUMN "TEST"."MYPAY"."MYPAYZ" IS '帐号';
COMMENT ON COLUMN "TEST"."MYPAY"."MYPAYH" IS '户名';
COMMENT ON COLUMN "TEST"."MYPAY"."MYPAYE" IS '电话';
COMMENT ON COLUMN "TEST"."MYPAY"."MYPAYA2" IS '地址';
COMMENT ON COLUMN "TEST"."MYPAY"."MYPAYM" IS '统一社会信用码';
COMMENT ON COLUMN "TEST"."MYPAY"."MYPAYID" IS 'id';

-- ----------------------------
-- Table structure for OPPPAY
-- ----------------------------
DROP TABLE "TEST"."OPPPAY";
CREATE TABLE "TEST"."OPPPAY" (
  "OPPPAYB" VARCHAR2(500 BYTE),
  "OPPPAYA" VARCHAR2(700 BYTE),
  "OPPPAYZ" VARCHAR2(200 BYTE),
  "OPPPAYH" VARCHAR2(200 BYTE),
  "OPPPAYE" VARCHAR2(100 BYTE),
  "OPPPAYA2" VARCHAR2(700 BYTE),
  "OPPPAYM" VARCHAR2(200 BYTE),
  "OPPPAYID" VARCHAR2(200 BYTE)
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;
COMMENT ON COLUMN "TEST"."OPPPAY"."OPPPAYB" IS '开户行';
COMMENT ON COLUMN "TEST"."OPPPAY"."OPPPAYA" IS '银行地址';
COMMENT ON COLUMN "TEST"."OPPPAY"."OPPPAYZ" IS '帐号';
COMMENT ON COLUMN "TEST"."OPPPAY"."OPPPAYH" IS '户名';
COMMENT ON COLUMN "TEST"."OPPPAY"."OPPPAYE" IS '电话';
COMMENT ON COLUMN "TEST"."OPPPAY"."OPPPAYA2" IS '地址';
COMMENT ON COLUMN "TEST"."OPPPAY"."OPPPAYM" IS '统一社会信用码';
COMMENT ON COLUMN "TEST"."OPPPAY"."OPPPAYID" IS 'id';

-- ----------------------------
-- Table structure for STAGE_MIGRLOG
-- ----------------------------
DROP TABLE "TEST"."STAGE_MIGRLOG";
CREATE TABLE "TEST"."STAGE_MIGRLOG" (
  "SVRID_FK" NUMBER,
  "DBID_GEN_FK" NUMBER,
  "ID" NUMBER NOT NULL,
  "REF_OBJECT_ID" NUMBER,
  "REF_OBJECT_TYPE" VARCHAR2(4000 BYTE),
  "LOG_DATE" TIMESTAMP(6) NOT NULL,
  "SEVERITY" NUMBER(4,0) NOT NULL,
  "LOGTEXT" VARCHAR2(4000 BYTE),
  "PHASE" VARCHAR2(20 BYTE)
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for TAB_EMPLOYEE
-- ----------------------------
DROP TABLE "TEST"."TAB_EMPLOYEE";
CREATE TABLE "TEST"."TAB_EMPLOYEE" (
  "ID" NUMBER(10,0) NOT NULL,
  "NAME" VARCHAR2(45 BYTE) NOT NULL,
  "SEX" VARCHAR2(45 BYTE) NOT NULL,
  "BUSINESS" VARCHAR2(45 BYTE) NOT NULL,
  "ADDRESS" VARCHAR2(100 BYTE) NOT NULL,
  "REMARK" VARCHAR2(200 BYTE) NOT NULL
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for TAB_PRODUCT
-- ----------------------------
DROP TABLE "TEST"."TAB_PRODUCT";
CREATE TABLE "TEST"."TAB_PRODUCT" (
  "ID" NUMBER(10,0) NOT NULL,
  "NAME" VARCHAR2(45 BYTE) NOT NULL,
  "PRICE" NUMBER(5,2) NOT NULL,
  "FACTORY" VARCHAR2(45 BYTE) NOT NULL,
  "REMARK" VARCHAR2(200 BYTE) NOT NULL
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;
COMMENT ON COLUMN "TEST"."TAB_PRODUCT"."ID" IS '主键id';
COMMENT ON COLUMN "TEST"."TAB_PRODUCT"."NAME" IS '商品名称';
COMMENT ON COLUMN "TEST"."TAB_PRODUCT"."PRICE" IS '商品价格';
COMMENT ON COLUMN "TEST"."TAB_PRODUCT"."FACTORY" IS '生产商';
COMMENT ON COLUMN "TEST"."TAB_PRODUCT"."REMARK" IS '备注';
COMMENT ON TABLE "TEST"."TAB_PRODUCT" IS '备注';

-- ----------------------------
-- Table structure for TB_BOOKS
-- ----------------------------
DROP TABLE "TEST"."TB_BOOKS";
CREATE TABLE "TEST"."TB_BOOKS" (
  "ID" NUMBER,
  "NAME" VARCHAR2(45 BYTE),
  "PRICE" VARCHAR2(50 BYTE),
  "BOOKCOUNT" VARCHAR2(500 BYTE),
  "AUTHOR" VARCHAR2(1000 BYTE),
  "URL" VARCHAR2(500 BYTE)
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;
COMMENT ON COLUMN "TEST"."TB_BOOKS"."ID" IS 'ID编号';
COMMENT ON COLUMN "TEST"."TB_BOOKS"."NAME" IS '图书名称';
COMMENT ON COLUMN "TEST"."TB_BOOKS"."PRICE" IS '价格';
COMMENT ON COLUMN "TEST"."TB_BOOKS"."BOOKCOUNT" IS '数量';
COMMENT ON COLUMN "TEST"."TB_BOOKS"."AUTHOR" IS '作者';
COMMENT ON TABLE "TEST"."TB_BOOKS" IS '信息添加';

-- ----------------------------
-- Table structure for TB_STUDENTS
-- ----------------------------
DROP TABLE "TEST"."TB_STUDENTS";
CREATE TABLE "TEST"."TB_STUDENTS" (
  "ID" NUMBER(10,0) NOT NULL,
  "STUDENTCODE" VARCHAR2(45 BYTE) NOT NULL,
  "NAME" VARCHAR2(45 BYTE) NOT NULL,
  "SEX" VARCHAR2(45 BYTE) NOT NULL,
  "INSTITUTE" VARCHAR2(45 BYTE) NOT NULL,
  "DEPARTMENT" VARCHAR2(45 BYTE) NOT NULL,
  "CLASSES" VARCHAR2(45 BYTE) NOT NULL,
  "PHONE" VARCHAR2(45 BYTE) NOT NULL,
  "ADDRESS" VARCHAR2(45 BYTE) NOT NULL
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for TB_USER
-- ----------------------------
DROP TABLE "TEST"."TB_USER";
CREATE TABLE "TEST"."TB_USER" (
  "TB_USERID" NUMBER(10,0) NOT NULL,
  "TB_USERNAME" VARCHAR2(10 BYTE) NOT NULL,
  "TB_PASSWORD" VARCHAR2(50 BYTE) NOT NULL,
  "TB_USERPHONE" NUMBER(12,0) NOT NULL
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;
COMMENT ON COLUMN "TEST"."TB_USER"."TB_USERID" IS '用户ID';
COMMENT ON COLUMN "TEST"."TB_USER"."TB_USERNAME" IS '用户名';
COMMENT ON COLUMN "TEST"."TB_USER"."TB_PASSWORD" IS '用户密码';
COMMENT ON COLUMN "TEST"."TB_USER"."TB_USERPHONE" IS '用户电话';
COMMENT ON TABLE "TEST"."TB_USER" IS '用户注册信息添加';

-- ----------------------------
-- Table structure for TYPECLASS
-- ----------------------------
DROP TABLE "TEST"."TYPECLASS";
CREATE TABLE "TEST"."TYPECLASS" (
  "TYPECLASS" VARCHAR2(70 BYTE)
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;
COMMENT ON COLUMN "TEST"."TYPECLASS"."TYPECLASS" IS '品牌厂家';

-- ----------------------------
-- Table structure for WARNINGSTATU
-- ----------------------------
DROP TABLE "TEST"."WARNINGSTATU";
CREATE TABLE "TEST"."WARNINGSTATU" (
  "STATU" VARCHAR2(50 BYTE) NOT NULL
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;
COMMENT ON COLUMN "TEST"."WARNINGSTATU"."STATU" IS '故障状态';

-- ----------------------------
-- View structure for MGV_ALL_CATALOGS
-- ----------------------------
CREATE OR REPLACE VIEW "TEST"."MGV_ALL_CATALOGS" AS SELECT md_projects.id project_id ,
    md_projects.project_name project_name,
    md_connections.id connection_id ,
    md_connections.host host ,
    md_connections.port port ,
    md_connections.username username ,
    md_connections.dburl dburl ,
    md_catalogs.id catalog_id ,
    md_catalogs.catalog_name catalog_name
  FROM md_projects ,
    md_connections,
    md_catalogs
  WHERE md_catalogs.connection_id_fk = md_connections.id
  AND md_connections.project_id_fk   = md_projects.id WITH READ ONLY CONSTRAINTS "SYS_C0023693";

-- ----------------------------
-- View structure for MGV_ALL_CONNECTIONS
-- ----------------------------
CREATE OR REPLACE VIEW "TEST"."MGV_ALL_CONNECTIONS" AS SELECT md_projects.id project_id ,
    md_projects.project_name project_name,
    MD_CONNECTIONS.ID CONNECTION_ID ,
    MD_CONNECTIONS.NAME CONNECTION_NAME,
    md_connections.host host ,
    md_connections.port port ,
    md_connections.username username ,
    md_connections.dburl dburl
  FROM md_projects,
    md_connections
  WHERE MD_CONNECTIONS.PROJECT_ID_FK = MD_PROJECTS.ID WITH READ ONLY CONSTRAINTS "SYS_C0023694";

-- ----------------------------
-- View structure for MGV_ALL_SCHEMA
-- ----------------------------
CREATE OR REPLACE VIEW "TEST"."MGV_ALL_SCHEMA" AS SELECT md_projects.id project_id ,
    md_projects.project_name project_name,
    md_connections.id connection_id ,
    md_connections.host host ,
    md_connections.port port ,
    md_connections.username username ,
    md_catalogs.id catalog_id ,
    md_catalogs.catalog_name catalog_name,
    md_schemas.id schema_id ,
    md_schemas.name schema_name
  FROM md_connections,
    md_catalogs ,
    md_schemas ,
    md_projects
  WHERE md_schemas.catalog_id_fk   = md_catalogs.id
  AND md_catalogs.connection_id_fk = md_connections.id
  AND md_connections.project_id_fk = md_projects.id WITH READ ONLY CONSTRAINTS "SYS_C0023691";

-- ----------------------------
-- View structure for MGV_ALL_STORED_PROGRAMS
-- ----------------------------
CREATE OR REPLACE VIEW "TEST"."MGV_ALL_STORED_PROGRAMS" AS SELECT md_projects.id project_id ,
    md_projects.project_name project_name ,
    md_connections.id connection_id ,
    md_connections.host host ,
    md_connections.port port ,
    md_connections.username username ,
    md_catalogs.id catalog_id ,
    md_catalogs.catalog_name catalog_name ,
    md_schemas.id schema_id ,
    md_schemas.name schema_name ,
    md_stored_programs.id stored_program_id ,
    md_stored_programs.programtype programtype ,
    md_stored_programs.name stored_program_name,
    md_stored_programs.package_id_fk package_id_fk
  FROM md_projects ,
    md_connections,
    md_catalogs ,
    md_schemas ,
    md_stored_programs
  WHERE md_stored_programs.schema_id_fk = md_schemas.id
  AND md_schemas.catalog_id_fk          = md_catalogs.id
  AND md_catalogs.connection_id_fk      = md_connections.id
  AND md_connections.project_id_fk      = md_projects.id;

-- ----------------------------
-- View structure for MGV_ALL_TABLES
-- ----------------------------
CREATE OR REPLACE VIEW "TEST"."MGV_ALL_TABLES" AS SELECT md_projects.id project_id ,
    md_projects.project_name project_name,
    md_connections.id connection_id ,
    md_connections.host host ,
    md_connections.port port ,
    md_connections.username username ,
    md_connections.dburl dburl ,
    md_catalogs.id catalog_id ,
    md_catalogs.catalog_name catalog_name,
    md_schemas.id schema_id ,
    md_schemas.name schema_name ,
    md_tables.id table_id ,
    md_tables.TABLE_NAME TABLE_NAME
  FROM md_connections,
    md_catalogs ,
    md_schemas ,
    md_tables ,
    md_projects
  WHERE md_tables.schema_id_fk     = md_schemas.id
  AND md_schemas.catalog_id_fk     = md_catalogs.id
  AND md_catalogs.connection_id_fk = md_connections.id
  AND md_connections.project_id_fk = md_projects.id WITH READ ONLY CONSTRAINTS "SYS_C0023692";

-- ----------------------------
-- View structure for MGV_ALL_TABLE_TRIGGERS
-- ----------------------------
CREATE OR REPLACE VIEW "TEST"."MGV_ALL_TABLE_TRIGGERS" AS SELECT md_projects.id project_id ,
    md_projects.project_name project_name,
    md_connections.id connection_id ,
    md_connections.host host ,
    md_connections.port port ,
    md_connections.username username ,
    md_catalogs.id catalog_id ,
    md_catalogs.catalog_name catalog_name,
    md_catalogs.dummy_flag dummy_flag ,
    md_schemas.id schema_id ,
    md_schemas.name schema_name ,
    md_tables.id table_id ,
    md_tables.TABLE_NAME TABLE_NAME ,
    md_triggers.id trigger_id ,
    md_triggers.trigger_name trigger_name
  FROM md_projects ,
    md_connections,
    md_catalogs ,
    md_schemas ,
    md_tables ,
    md_triggers
  WHERE md_triggers.table_or_view_id_fk = md_tables.id
  AND md_tables.schema_id_fk            = md_schemas.id
  AND md_schemas.catalog_id_fk          = md_catalogs.id
  AND md_catalogs.connection_id_fk      = md_connections.id
  AND md_connections.project_id_fk      = md_projects.id;

-- ----------------------------
-- View structure for MGV_ALL_VIEWS
-- ----------------------------
CREATE OR REPLACE VIEW "TEST"."MGV_ALL_VIEWS" AS SELECT md_projects.id project_id ,
    md_projects.project_name project_name,
    md_connections.id connection_id ,
    md_connections.host host ,
    md_connections.port port ,
    username username ,
    md_catalogs.id catalog_id ,
    md_catalogs.catalog_name catalog_name,
    md_catalogs.dummy_flag dummy_flag ,
    md_schemas.id schema_id ,
    md_schemas.name schema_name ,
    md_views.id view_id ,
    md_views.view_name view_name
  FROM md_projects ,
    md_connections,
    md_catalogs ,
    md_schemas ,
    md_views
  WHERE md_views.schema_id_fk      = md_schemas.id
  AND md_schemas.catalog_id_fk     = md_catalogs.id
  AND md_catalogs.connection_id_fk = md_connections.id
  AND md_connections.project_id_fk = md_projects.id WITH READ ONLY CONSTRAINTS "SYS_C0023695";
COMMENT ON TABLE "TEST"."MGV_ALL_VIEWS" IS 'View to iterate over all views in the system';

-- ----------------------------
-- View structure for MGV_ALL_VIEW_TRIGGERS
-- ----------------------------
CREATE OR REPLACE VIEW "TEST"."MGV_ALL_VIEW_TRIGGERS" AS SELECT md_projects.id project_id ,
    md_projects.project_name project_name,
    md_connections.id connection_id ,
    md_connections.host host ,
    md_connections.port port ,
    md_connections.username username ,
    md_catalogs.id catalog_id ,
    md_catalogs.catalog_name catalog_name,
    md_catalogs.dummy_flag dummy_flag ,
    md_schemas.id schema_id ,
    md_schemas.name schema_name ,
    md_views.id view_id ,
    md_views.view_name view_name ,
    md_triggers.id trigger_id ,
    md_triggers.trigger_name trigger_name
  FROM md_projects ,
    md_connections,
    md_catalogs ,
    md_schemas ,
    md_views ,
    md_triggers
  WHERE md_triggers.table_or_view_id_fk = md_views.id
  AND md_views.schema_id_fk             = md_schemas.id
  AND md_schemas.catalog_id_fk          = md_catalogs.id
  AND md_catalogs.connection_id_fk      = md_connections.id
  AND md_connections.project_id_fk      = md_projects.id;

-- ----------------------------
-- Function structure for PROC_DROPIFEXISTS
-- ----------------------------
CREATE OR REPLACE
PROCEDURE "TEST"."PROC_DROPIFEXISTS" AS
begin

  select count(*)

  into v_count

  from user_tables

  where table_name = upper(p_table);

if v_count > 0 then

  execute immediate 'drop table ' || p_table ||' purge';

end if;

end proc_dropifexists;
/

-- ----------------------------
-- Function structure for PRO_UPDATEUSER
-- ----------------------------
CREATE OR REPLACE
PROCEDURE "TEST"."PRO_UPDATEUSER" AS
begin
? loop
? ? if not c1%ISOPEN then
? ? ? open c1;
? ? end if;

? ? fetch c1 into ccc;
? ? exit when c1%notfound or c1%notfound is null;
? ? dbms_output.put_line(ccc.name||' '||ccc.price||' '||ccc.bookCount||' '||ccc.author );?
? end loop;
end;
/

-- ----------------------------
-- Sequence structure for AUTO_DXTESTWORK
-- ----------------------------
DROP SEQUENCE "TEST"."AUTO_DXTESTWORK";
CREATE SEQUENCE "TEST"."AUTO_DXTESTWORK" MINVALUE 0 MAXVALUE 99999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for AUTO_ID
-- ----------------------------
DROP SEQUENCE "TEST"."AUTO_ID";
CREATE SEQUENCE "TEST"."AUTO_ID" MINVALUE 4 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for AUTO_INCREMENT
-- ----------------------------
DROP SEQUENCE "TEST"."AUTO_INCREMENT";
CREATE SEQUENCE "TEST"."AUTO_INCREMENT" MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 CACHE 10;

-- ----------------------------
-- Sequence structure for AUTO_SEQ
-- ----------------------------
DROP SEQUENCE "TEST"."AUTO_SEQ";
CREATE SEQUENCE "TEST"."AUTO_SEQ" MINVALUE 0 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for AUTO_TB_USER
-- ----------------------------
DROP SEQUENCE "TEST"."AUTO_TB_USER";
CREATE SEQUENCE "TEST"."AUTO_TB_USER" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for CONTRACTCLASSID
-- ----------------------------
DROP SEQUENCE "TEST"."CONTRACTCLASSID";
CREATE SEQUENCE "TEST"."CONTRACTCLASSID" MINVALUE 0 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for DBOBJECTID_SEQUENCE
-- ----------------------------
DROP SEQUENCE "TEST"."DBOBJECTID_SEQUENCE";
CREATE SEQUENCE "TEST"."DBOBJECTID_SEQUENCE" MINVALUE 1 MAXVALUE 999999999999999999999999 INCREMENT BY 50 CACHE 50;

-- ----------------------------
-- Sequence structure for DXTESTCONTRACTID
-- ----------------------------
DROP SEQUENCE "TEST"."DXTESTCONTRACTID";
CREATE SEQUENCE "TEST"."DXTESTCONTRACTID" MINVALUE 0 MAXVALUE 9999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for DXTESTID
-- ----------------------------
DROP SEQUENCE "TEST"."DXTESTID";
CREATE SEQUENCE "TEST"."DXTESTID" MINVALUE 0 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 NOCACHE;

-- ----------------------------
-- Sequence structure for DXTESTUSERID
-- ----------------------------
DROP SEQUENCE "TEST"."DXTESTUSERID";
CREATE SEQUENCE "TEST"."DXTESTUSERID" MINVALUE 0 MAXVALUE 99999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for DXTESTWORKID
-- ----------------------------
DROP SEQUENCE "TEST"."DXTESTWORKID";
CREATE SEQUENCE "TEST"."DXTESTWORKID" MINVALUE 0 MAXVALUE 99999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ID_TB_BOOK
-- ----------------------------
DROP SEQUENCE "TEST"."ID_TB_BOOK";
CREATE SEQUENCE "TEST"."ID_TB_BOOK" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 NOCACHE;

-- ----------------------------
-- Sequence structure for NEW1
-- ----------------------------
DROP SEQUENCE "TEST"."NEW1";
CREATE SEQUENCE "TEST"."NEW1" MINVALUE 0 MAXVALUE 999999999 INCREMENT BY 1 NOCACHE;

-- ----------------------------
-- Sequence structure for TAB_EMPLOYEE_SE
-- ----------------------------
DROP SEQUENCE "TEST"."TAB_EMPLOYEE_SE";
CREATE SEQUENCE "TEST"."TAB_EMPLOYEE_SE" MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for TAB_PRODUCT_SE
-- ----------------------------
DROP SEQUENCE "TEST"."TAB_PRODUCT_SE";
CREATE SEQUENCE "TEST"."TAB_PRODUCT_SE" MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Triggers structure for table CONTRACTCLASS
-- ----------------------------
CREATE TRIGGER "TEST"."CONTRACTCLASSIDTRI" BEFORE INSERT ON "TEST"."CONTRACTCLASS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW 
declare
  -- local variables here
begin
  select test.contractclassid.nextval into :new.id from dual;
end contractclassidtri;
/

-- ----------------------------
-- Triggers structure for table DXTEST
-- ----------------------------
CREATE TRIGGER "TEST"."DXTESTTR" BEFORE INSERT ON "TEST"."DXTEST" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW 
declare
  -- local variables here
begin
 select test.dxtestid.nextval into :new.id from dual ;
end dxtesttr;
/
CREATE TRIGGER "TEST"."DXTEST_TIME" BEFORE INSERT OR UPDATE ON "TEST"."DXTEST" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW 
declare
  -- local variables here
begin
  :NEW.REDATE:= to_char(sysdate, 'yyyy-MM-dd');
end dxtest_time;
/

-- ----------------------------
-- Triggers structure for table DXTESTCONTRACT
-- ----------------------------
CREATE TRIGGER "TEST"."DXTESTCONTRACTIDTRI" BEFORE INSERT ON "TEST"."DXTESTCONTRACT" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW 
declare
  -- local variables here
begin
  select test.dxtestcontractid.nextval into :new.id from dual;
end dxtestcontractidtri;
/
CREATE TRIGGER "TEST"."DXTESTCONTRACTNOWTRI" BEFORE INSERT ON "TEST"."DXTESTCONTRACT" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW 
declare
  -- local variables here
begin
  :new.contractnowdate:=to_char(sysdate,'yyyy-MM-dd HH:mm:ss');
end dxtestcontractnowtri;
/

-- ----------------------------
-- Triggers structure for table DXTESTCONTRACTFILE
-- ----------------------------
CREATE TRIGGER "TEST"."DXTESTCONTRACTFILENOWTRI" BEFORE INSERT ON "TEST"."DXTESTCONTRACTFILE" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW 
declare
  -- local variables here
begin
  :new.contractnowdate:=to_char(sysdate,'yyyy-MM-dd HH:mm:ss');
end dxtestcontractfilenowtri;
/

-- ----------------------------
-- Triggers structure for table DXTESTFILE
-- ----------------------------
CREATE TRIGGER "TEST"."DXTESTFILEREDATE" BEFORE INSERT ON "TEST"."DXTESTFILE" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW 
declare
  -- local variables here
begin
  :NEW.REDATE :=to_char(sysdate ,'yyyy-MM-dd');
end dxtestfileRedate;
/

-- ----------------------------
-- Triggers structure for table DXTESTUSER
-- ----------------------------
CREATE TRIGGER "TEST"."DXTESTUSERIDTRI" BEFORE INSERT ON "TEST"."DXTESTUSER" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW 
declare
  -- local variables here
begin
  select test.dxtestuserid.nextval into :NEW.id from dual;
end dxtestuseridTri;
/

-- ----------------------------
-- Triggers structure for table DXTESTWORK
-- ----------------------------
CREATE TRIGGER "TEST"."DXTESTWORKIDTRI" BEFORE INSERT ON "TEST"."DXTESTWORK" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW 
declare
  -- local variables here
begin
  select test.dxtestworkid.nextval into :new.id from dual;
end dxtestworkIdTri;
/
CREATE TRIGGER "TEST"."DXTESTWORKNOWDATE" BEFORE INSERT ON "TEST"."DXTESTWORK" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW 
declare
  -- local variables here
begin
  :NEW.NOWDATE :=to_char(sysdate ,'yyyy-MM-dd hh24:mi:ss');
end dxtestworknowdate;
/
CREATE TRIGGER "TEST"."DXTESTWORKSTNO" BEFORE INSERT ON "TEST"."DXTESTWORK" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW DISABLE 
declare
  -- local variables here
begin
      :NEW.STNO :=to_char(sysdate ,'yyyy-MM-dd hh24:mi:ss');
    end dxtestworkstno;
/

-- ----------------------------
-- Primary Key structure for table MD_ADDITIONAL_PROPERTIES
-- ----------------------------
ALTER TABLE "TEST"."MD_ADDITIONAL_PROPERTIES" ADD CONSTRAINT "MD_ADDITIONAL_PROPERTIES_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table MD_ADDITIONAL_PROPERTIES
-- ----------------------------
ALTER TABLE "TEST"."MD_ADDITIONAL_PROPERTIES" ADD CONSTRAINT "SYS_C0023519" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_ADDITIONAL_PROPERTIES" ADD CONSTRAINT "SYS_C0023520" CHECK ("CONNECTION_ID_FK" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_ADDITIONAL_PROPERTIES" ADD CONSTRAINT "SYS_C0023521" CHECK ("REF_ID_FK" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_ADDITIONAL_PROPERTIES" ADD CONSTRAINT "SYS_C0023522" CHECK ("REF_TYPE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_ADDITIONAL_PROPERTIES" ADD CONSTRAINT "SYS_C0023523" CHECK ("PROP_KEY" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_ADDITIONAL_PROPERTIES" ADD CONSTRAINT "SYS_C0023524" CHECK ("SECURITY_GROUP_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_ADDITIONAL_PROPERTIES" ADD CONSTRAINT "SYS_C0023525" CHECK ("CREATED_ON" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table MD_APPLICATIONFILES
-- ----------------------------
ALTER TABLE "TEST"."MD_APPLICATIONFILES" ADD CONSTRAINT "MD_APPLICATIONFILES_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table MD_APPLICATIONFILES
-- ----------------------------
ALTER TABLE "TEST"."MD_APPLICATIONFILES" ADD CONSTRAINT "SYS_C0023396" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_APPLICATIONFILES" ADD CONSTRAINT "SYS_C0023397" CHECK ("APPLICATIONS_ID_FK" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_APPLICATIONFILES" ADD CONSTRAINT "SYS_C0023398" CHECK ("NAME" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_APPLICATIONFILES" ADD CONSTRAINT "SYS_C0023399" CHECK ("URI" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_APPLICATIONFILES" ADD CONSTRAINT "SYS_C0023400" CHECK ("TYPE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_APPLICATIONFILES" ADD CONSTRAINT "SYS_C0023401" CHECK ("STATE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_APPLICATIONFILES" ADD CONSTRAINT "SYS_C0023402" CHECK ("SECURITY_GROUP_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_APPLICATIONFILES" ADD CONSTRAINT "SYS_C0023403" CHECK ("CREATED_ON" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Indexes structure for table MD_APPLICATIONFILES
-- ----------------------------
CREATE INDEX "TEST"."MD_APP_FILE_TYPE_IDX"
  ON "TEST"."MD_APPLICATIONFILES" ("ID" ASC, "TYPE" ASC)
  LOGGING
  VISIBLE
PCTFREE 10
INITRANS 2
STORAGE (
  BUFFER_POOL DEFAULT
);
CREATE INDEX "TEST"."MD_STATE_TYPE__ID"
  ON "TEST"."MD_APPLICATIONFILES" ("TYPE" ASC, "ID" ASC, "STATE" ASC)
  LOGGING
  VISIBLE
PCTFREE 10
INITRANS 2
STORAGE (
  BUFFER_POOL DEFAULT
);

-- ----------------------------
-- Primary Key structure for table MD_APPLICATIONS
-- ----------------------------
ALTER TABLE "TEST"."MD_APPLICATIONS" ADD CONSTRAINT "MD_APPLICATIONS_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table MD_APPLICATIONS
-- ----------------------------
ALTER TABLE "TEST"."MD_APPLICATIONS" ADD CONSTRAINT "SYS_C0023391" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_APPLICATIONS" ADD CONSTRAINT "SYS_C0023392" CHECK ("PROJECT_ID_FK" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_APPLICATIONS" ADD CONSTRAINT "SYS_C0023393" CHECK ("SECURITY_GROUP_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_APPLICATIONS" ADD CONSTRAINT "SYS_C0023394" CHECK ("CREATED_ON" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table MD_CATALOGS
-- ----------------------------
ALTER TABLE "TEST"."MD_CATALOGS" ADD CONSTRAINT "MD_CATALOGS_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table MD_CATALOGS
-- ----------------------------
ALTER TABLE "TEST"."MD_CATALOGS" ADD CONSTRAINT "SYS_C0023432" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_CATALOGS" ADD CONSTRAINT "SYS_C0023433" CHECK ("CONNECTION_ID_FK" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_CATALOGS" ADD CONSTRAINT "SYS_C0023434" CHECK ("SECURITY_GROUP_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_CATALOGS" ADD CONSTRAINT "SYS_C0023435" CHECK ("CREATED_ON" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Checks structure for table MD_CODE_REGEX
-- ----------------------------
ALTER TABLE "TEST"."MD_CODE_REGEX" ADD CONSTRAINT "SYS_C0023700" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_CODE_REGEX" ADD CONSTRAINT "SYS_C0023701" CHECK ("REGEX" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_CODE_REGEX" ADD CONSTRAINT "SYS_C0023702" CHECK ("DESCRIPTION" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table MD_COLUMNS
-- ----------------------------
ALTER TABLE "TEST"."MD_COLUMNS" ADD CONSTRAINT "MD_COLUMNS_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table MD_COLUMNS
-- ----------------------------
ALTER TABLE "TEST"."MD_COLUMNS" ADD CONSTRAINT "MD_COLUMNS_NULLABLE_Y_N" CHECK ((UPPER(NULLABLE) IN ('Y','N'))) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_COLUMNS" ADD CONSTRAINT "SYS_C0023446" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_COLUMNS" ADD CONSTRAINT "SYS_C0023447" CHECK ("TABLE_ID_FK" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_COLUMNS" ADD CONSTRAINT "SYS_C0023448" CHECK ("COLUMN_NAME" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_COLUMNS" ADD CONSTRAINT "SYS_C0023449" CHECK ("COLUMN_ORDER" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_COLUMNS" ADD CONSTRAINT "SYS_C0023450" CHECK ("NULLABLE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_COLUMNS" ADD CONSTRAINT "SYS_C0023451" CHECK ("SECURITY_GROUP_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_COLUMNS" ADD CONSTRAINT "SYS_C0023452" CHECK ("CREATED_ON" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table MD_CONNECTIONS
-- ----------------------------
ALTER TABLE "TEST"."MD_CONNECTIONS" ADD CONSTRAINT "MD_CONNECTIONS_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table MD_CONNECTIONS
-- ----------------------------
ALTER TABLE "TEST"."MD_CONNECTIONS" ADD CONSTRAINT "SYS_C0023460" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_CONNECTIONS" ADD CONSTRAINT "SYS_C0023461" CHECK ("PROJECT_ID_FK" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_CONNECTIONS" ADD CONSTRAINT "SYS_C0023462" CHECK ("SECURITY_GROUP_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_CONNECTIONS" ADD CONSTRAINT "SYS_C0023463" CHECK ("CREATED_ON" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table MD_CONSTRAINTS
-- ----------------------------
ALTER TABLE "TEST"."MD_CONSTRAINTS" ADD CONSTRAINT "MD_CONSTRAINTS_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table MD_CONSTRAINTS
-- ----------------------------
ALTER TABLE "TEST"."MD_CONSTRAINTS" ADD CONSTRAINT "SYS_C0023495" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_CONSTRAINTS" ADD CONSTRAINT "SYS_C0023496" CHECK ("TABLE_ID_FK" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_CONSTRAINTS" ADD CONSTRAINT "SYS_C0023497" CHECK ("LANGUAGE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_CONSTRAINTS" ADD CONSTRAINT "SYS_C0023498" CHECK ("SECURITY_GROUP_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_CONSTRAINTS" ADD CONSTRAINT "SYS_C0023499" CHECK ("CREATED_ON" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table MD_CONSTRAINT_DETAILS
-- ----------------------------
ALTER TABLE "TEST"."MD_CONSTRAINT_DETAILS" ADD CONSTRAINT "MD_CONSTRAINT_DETAILS_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table MD_CONSTRAINT_DETAILS
-- ----------------------------
ALTER TABLE "TEST"."MD_CONSTRAINT_DETAILS" ADD CONSTRAINT "SYS_C0023635" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_CONSTRAINT_DETAILS" ADD CONSTRAINT "SYS_C0023636" CHECK ("CONSTRAINT_ID_FK" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_CONSTRAINT_DETAILS" ADD CONSTRAINT "SYS_C0023637" CHECK ("DETAIL_ORDER" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_CONSTRAINT_DETAILS" ADD CONSTRAINT "SYS_C0023638" CHECK ("SECURITY_GROUP_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_CONSTRAINT_DETAILS" ADD CONSTRAINT "SYS_C0023639" CHECK ("CREATED_ON" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table MD_DERIVATIVES
-- ----------------------------
ALTER TABLE "TEST"."MD_DERIVATIVES" ADD CONSTRAINT "MIGRDREIVATIVES_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table MD_DERIVATIVES
-- ----------------------------
ALTER TABLE "TEST"."MD_DERIVATIVES" ADD CONSTRAINT "MIGRDER_CHK" CHECK (ENABLED = 'Y' OR ENABLED = 'y' OR ENABLED = 'N' OR  ENABLED = 'n') NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_DERIVATIVES" ADD CONSTRAINT "SYS_C0023577" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_DERIVATIVES" ADD CONSTRAINT "SYS_C0023578" CHECK ("SRC_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_DERIVATIVES" ADD CONSTRAINT "SYS_C0023579" CHECK ("DERIVED_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_DERIVATIVES" ADD CONSTRAINT "SYS_C0023580" CHECK ("DERIVED_CONNECTION_ID_FK" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_DERIVATIVES" ADD CONSTRAINT "SYS_C0023581" CHECK ("SECURITY_GROUP_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_DERIVATIVES" ADD CONSTRAINT "SYS_C0023582" CHECK ("CREATED_ON" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table MD_FILE_ARTIFACTS
-- ----------------------------
ALTER TABLE "TEST"."MD_FILE_ARTIFACTS" ADD CONSTRAINT "MD_FILE_ARTIFACTS_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table MD_FILE_ARTIFACTS
-- ----------------------------
ALTER TABLE "TEST"."MD_FILE_ARTIFACTS" ADD CONSTRAINT "MD_APPL_FILE_FK_NONULL" CHECK ("APPLICATIONFILES_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_FILE_ARTIFACTS" ADD CONSTRAINT "MD_APP_FILE_ART_NONULL" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_FILE_ARTIFACTS" ADD CONSTRAINT "SYS_C0023407" CHECK ("SECURITY_GROUP_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_FILE_ARTIFACTS" ADD CONSTRAINT "SYS_C0023408" CHECK ("CREATED_ON" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table MD_GROUPS
-- ----------------------------
ALTER TABLE "TEST"."MD_GROUPS" ADD CONSTRAINT "MD_GROUPS_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table MD_GROUPS
-- ----------------------------
ALTER TABLE "TEST"."MD_GROUPS" ADD CONSTRAINT "SYS_C0023514" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_GROUPS" ADD CONSTRAINT "SYS_C0023515" CHECK ("SCHEMA_ID_FK" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_GROUPS" ADD CONSTRAINT "SYS_C0023516" CHECK ("SECURITY_GROUP_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_GROUPS" ADD CONSTRAINT "SYS_C0023517" CHECK ("CREATED_ON" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table MD_GROUP_MEMBERS
-- ----------------------------
ALTER TABLE "TEST"."MD_GROUP_MEMBERS" ADD CONSTRAINT "MD_GROUP_MEMBERS_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table MD_GROUP_MEMBERS
-- ----------------------------
ALTER TABLE "TEST"."MD_GROUP_MEMBERS" ADD CONSTRAINT "SYS_C0023427" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_GROUP_MEMBERS" ADD CONSTRAINT "SYS_C0023428" CHECK ("GROUP_ID_FK" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_GROUP_MEMBERS" ADD CONSTRAINT "SYS_C0023429" CHECK ("SECURITY_GROUP_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_GROUP_MEMBERS" ADD CONSTRAINT "SYS_C0023430" CHECK ("CREATED_ON" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table MD_GROUP_PRIVILEGES
-- ----------------------------
ALTER TABLE "TEST"."MD_GROUP_PRIVILEGES" ADD CONSTRAINT "MD_GROUP_PRIVILEGES_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table MD_GROUP_PRIVILEGES
-- ----------------------------
ALTER TABLE "TEST"."MD_GROUP_PRIVILEGES" ADD CONSTRAINT "SYS_C0023545" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_GROUP_PRIVILEGES" ADD CONSTRAINT "SYS_C0023546" CHECK ("GROUP_ID_FK" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_GROUP_PRIVILEGES" ADD CONSTRAINT "SYS_C0023547" CHECK ("PRIVILEGE_ID_FK" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_GROUP_PRIVILEGES" ADD CONSTRAINT "SYS_C0023548" CHECK ("SECURITY_GROUP_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_GROUP_PRIVILEGES" ADD CONSTRAINT "SYS_C0023549" CHECK ("CREATED_ON" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table MD_INDEXES
-- ----------------------------
ALTER TABLE "TEST"."MD_INDEXES" ADD CONSTRAINT "MD_INDEXES_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table MD_INDEXES
-- ----------------------------
ALTER TABLE "TEST"."MD_INDEXES" ADD CONSTRAINT "SYS_C0023557" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_INDEXES" ADD CONSTRAINT "SYS_C0023558" CHECK ("TABLE_ID_FK" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_INDEXES" ADD CONSTRAINT "SYS_C0023559" CHECK ("SECURITY_GROUP_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_INDEXES" ADD CONSTRAINT "SYS_C0023560" CHECK ("CREATED_ON" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table MD_INDEX_DETAILS
-- ----------------------------
ALTER TABLE "TEST"."MD_INDEX_DETAILS" ADD CONSTRAINT "MD_INDEX_DETAILS_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table MD_INDEX_DETAILS
-- ----------------------------
ALTER TABLE "TEST"."MD_INDEX_DETAILS" ADD CONSTRAINT "SYS_C0023483" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_INDEX_DETAILS" ADD CONSTRAINT "SYS_C0023484" CHECK ("INDEX_ID_FK" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_INDEX_DETAILS" ADD CONSTRAINT "SYS_C0023485" CHECK ("COLUMN_ID_FK" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_INDEX_DETAILS" ADD CONSTRAINT "SYS_C0023486" CHECK ("DETAIL_ORDER" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_INDEX_DETAILS" ADD CONSTRAINT "SYS_C0023487" CHECK ("SECURITY_GROUP_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_INDEX_DETAILS" ADD CONSTRAINT "SYS_C0023488" CHECK ("CREATED_ON" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table MD_MIGR_DEPENDENCY
-- ----------------------------
ALTER TABLE "TEST"."MD_MIGR_DEPENDENCY" ADD CONSTRAINT "MIGR_DEPENDENCY_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table MD_MIGR_DEPENDENCY
-- ----------------------------
ALTER TABLE "TEST"."MD_MIGR_DEPENDENCY" ADD CONSTRAINT "SYS_C0023600" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_MIGR_DEPENDENCY" ADD CONSTRAINT "SYS_C0023601" CHECK ("CONNECTION_ID_FK" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_MIGR_DEPENDENCY" ADD CONSTRAINT "SYS_C0023602" CHECK ("PARENT_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_MIGR_DEPENDENCY" ADD CONSTRAINT "SYS_C0023603" CHECK ("CHILD_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_MIGR_DEPENDENCY" ADD CONSTRAINT "SYS_C0023604" CHECK ("PARENT_OBJECT_TYPE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_MIGR_DEPENDENCY" ADD CONSTRAINT "SYS_C0023605" CHECK ("CHILD_OBJECT_TYPE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_MIGR_DEPENDENCY" ADD CONSTRAINT "SYS_C0023606" CHECK ("SECURITY_GROUP_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_MIGR_DEPENDENCY" ADD CONSTRAINT "SYS_C0023607" CHECK ("CREATED_ON" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table MD_MIGR_PARAMETER
-- ----------------------------
ALTER TABLE "TEST"."MD_MIGR_PARAMETER" ADD CONSTRAINT "MIGR_PARAMETER_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table MD_MIGR_PARAMETER
-- ----------------------------
ALTER TABLE "TEST"."MD_MIGR_PARAMETER" ADD CONSTRAINT "SYS_C0023470" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_MIGR_PARAMETER" ADD CONSTRAINT "SYS_C0023471" CHECK ("CONNECTION_ID_FK" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_MIGR_PARAMETER" ADD CONSTRAINT "SYS_C0023472" CHECK ("OBJECT_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_MIGR_PARAMETER" ADD CONSTRAINT "SYS_C0023473" CHECK ("OBJECT_TYPE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_MIGR_PARAMETER" ADD CONSTRAINT "SYS_C0023474" CHECK ("PARAM_EXISTING" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_MIGR_PARAMETER" ADD CONSTRAINT "SYS_C0023475" CHECK ("PARAM_ORDER" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_MIGR_PARAMETER" ADD CONSTRAINT "SYS_C0023476" CHECK ("PARAM_NAME" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_MIGR_PARAMETER" ADD CONSTRAINT "SYS_C0023477" CHECK ("PARAM_TYPE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_MIGR_PARAMETER" ADD CONSTRAINT "SYS_C0023478" CHECK ("PARAM_DATA_TYPE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_MIGR_PARAMETER" ADD CONSTRAINT "SYS_C0023479" CHECK ("NULLABLE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_MIGR_PARAMETER" ADD CONSTRAINT "SYS_C0023480" CHECK ("SECURITY_GROUP_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_MIGR_PARAMETER" ADD CONSTRAINT "SYS_C0023481" CHECK ("CREATED_ON" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table MD_MIGR_WEAKDEP
-- ----------------------------
ALTER TABLE "TEST"."MD_MIGR_WEAKDEP" ADD CONSTRAINT "MIGR_WEAKDEP_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table MD_MIGR_WEAKDEP
-- ----------------------------
ALTER TABLE "TEST"."MD_MIGR_WEAKDEP" ADD CONSTRAINT "SYS_C0023625" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_MIGR_WEAKDEP" ADD CONSTRAINT "SYS_C0023626" CHECK ("CONNECTION_ID_FK" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_MIGR_WEAKDEP" ADD CONSTRAINT "SYS_C0023627" CHECK ("SCHEMA_ID_FK" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_MIGR_WEAKDEP" ADD CONSTRAINT "SYS_C0023628" CHECK ("PARENT_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_MIGR_WEAKDEP" ADD CONSTRAINT "SYS_C0023629" CHECK ("CHILD_NAME" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_MIGR_WEAKDEP" ADD CONSTRAINT "SYS_C0023630" CHECK ("PARENT_TYPE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_MIGR_WEAKDEP" ADD CONSTRAINT "SYS_C0023631" CHECK ("CHILD_TYPE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_MIGR_WEAKDEP" ADD CONSTRAINT "SYS_C0023632" CHECK ("SECURITY_GROUP_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_MIGR_WEAKDEP" ADD CONSTRAINT "SYS_C0023633" CHECK ("CREATED_ON" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table MD_OTHER_OBJECTS
-- ----------------------------
ALTER TABLE "TEST"."MD_OTHER_OBJECTS" ADD CONSTRAINT "MD_OTHER_OBJECTS_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table MD_OTHER_OBJECTS
-- ----------------------------
ALTER TABLE "TEST"."MD_OTHER_OBJECTS" ADD CONSTRAINT "SYS_C0023490" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_OTHER_OBJECTS" ADD CONSTRAINT "SYS_C0023491" CHECK ("SCHEMA_ID_FK" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_OTHER_OBJECTS" ADD CONSTRAINT "SYS_C0023492" CHECK ("SECURITY_GROUP_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_OTHER_OBJECTS" ADD CONSTRAINT "SYS_C0023493" CHECK ("CREATED_ON" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table MD_PACKAGES
-- ----------------------------
ALTER TABLE "TEST"."MD_PACKAGES" ADD CONSTRAINT "MD_PACKAGES_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table MD_PACKAGES
-- ----------------------------
ALTER TABLE "TEST"."MD_PACKAGES" ADD CONSTRAINT "SYS_C0023538" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_PACKAGES" ADD CONSTRAINT "SYS_C0023539" CHECK ("SCHEMA_ID_FK" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_PACKAGES" ADD CONSTRAINT "SYS_C0023540" CHECK ("NAME" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_PACKAGES" ADD CONSTRAINT "SYS_C0023541" CHECK ("LANGUAGE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_PACKAGES" ADD CONSTRAINT "SYS_C0023542" CHECK ("SECURITY_GROUP_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_PACKAGES" ADD CONSTRAINT "SYS_C0023543" CHECK ("CREATED_ON" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table MD_PARTITIONS
-- ----------------------------
ALTER TABLE "TEST"."MD_PARTITIONS" ADD CONSTRAINT "MD_PARTITIONS_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table MD_PARTITIONS
-- ----------------------------
ALTER TABLE "TEST"."MD_PARTITIONS" ADD CONSTRAINT "SYS_C0023455" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_PARTITIONS" ADD CONSTRAINT "SYS_C0023456" CHECK ("TABLE_ID_FK" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_PARTITIONS" ADD CONSTRAINT "SYS_C0023457" CHECK ("SECURITY_GROUP_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_PARTITIONS" ADD CONSTRAINT "SYS_C0023458" CHECK ("CREATED_ON" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table MD_PRIVILEGES
-- ----------------------------
ALTER TABLE "TEST"."MD_PRIVILEGES" ADD CONSTRAINT "MD_PRIVILEGES_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table MD_PRIVILEGES
-- ----------------------------
ALTER TABLE "TEST"."MD_PRIVILEGES" ADD CONSTRAINT "SYS_C0023609" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_PRIVILEGES" ADD CONSTRAINT "SYS_C0023610" CHECK ("SCHEMA_ID_FK" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_PRIVILEGES" ADD CONSTRAINT "SYS_C0023611" CHECK ("PRIVILEGE_NAME" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_PRIVILEGES" ADD CONSTRAINT "SYS_C0023612" CHECK ("PRIVELEGEOBJECTTYPE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_PRIVILEGES" ADD CONSTRAINT "SYS_C0023613" CHECK ("PRIVELEGE_TYPE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_PRIVILEGES" ADD CONSTRAINT "SYS_C0023614" CHECK ("NATIVE_SQL" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_PRIVILEGES" ADD CONSTRAINT "SYS_C0023615" CHECK ("SECURITY_GROUP_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_PRIVILEGES" ADD CONSTRAINT "SYS_C0023616" CHECK ("CREATED_ON" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table MD_PROJECTS
-- ----------------------------
ALTER TABLE "TEST"."MD_PROJECTS" ADD CONSTRAINT "MD_PROJECTS_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table MD_PROJECTS
-- ----------------------------
ALTER TABLE "TEST"."MD_PROJECTS" ADD CONSTRAINT "SYS_C0023465" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_PROJECTS" ADD CONSTRAINT "SYS_C0023466" CHECK ("PROJECT_NAME" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_PROJECTS" ADD CONSTRAINT "SYS_C0023467" CHECK ("SECURITY_GROUP_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_PROJECTS" ADD CONSTRAINT "SYS_C0023468" CHECK ("CREATED_ON" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table MD_REGISTRY
-- ----------------------------
ALTER TABLE "TEST"."MD_REGISTRY" ADD CONSTRAINT "MD_REGISTRY_PK" PRIMARY KEY ("OBJECT_TYPE", "OBJECT_NAME");

-- ----------------------------
-- Checks structure for table MD_REGISTRY
-- ----------------------------
ALTER TABLE "TEST"."MD_REGISTRY" ADD CONSTRAINT "SYS_C0023574" CHECK ("OBJECT_TYPE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_REGISTRY" ADD CONSTRAINT "SYS_C0023575" CHECK ("OBJECT_NAME" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Checks structure for table MD_REPOVERSIONS
-- ----------------------------
ALTER TABLE "TEST"."MD_REPOVERSIONS" ADD CONSTRAINT "SYS_C0023420" CHECK ("REVISION" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table MD_SCHEMAS
-- ----------------------------
ALTER TABLE "TEST"."MD_SCHEMAS" ADD CONSTRAINT "MD_SCHEMAS_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table MD_SCHEMAS
-- ----------------------------
ALTER TABLE "TEST"."MD_SCHEMAS" ADD CONSTRAINT "SYS_C0023569" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_SCHEMAS" ADD CONSTRAINT "SYS_C0023570" CHECK ("CATALOG_ID_FK" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_SCHEMAS" ADD CONSTRAINT "SYS_C0023571" CHECK ("SECURITY_GROUP_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_SCHEMAS" ADD CONSTRAINT "SYS_C0023572" CHECK ("CREATED_ON" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table MD_SEQUENCES
-- ----------------------------
ALTER TABLE "TEST"."MD_SEQUENCES" ADD CONSTRAINT "MD_SEQUENCES_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table MD_SEQUENCES
-- ----------------------------
ALTER TABLE "TEST"."MD_SEQUENCES" ADD CONSTRAINT "SYS_C0023437" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_SEQUENCES" ADD CONSTRAINT "SYS_C0023438" CHECK ("SCHEMA_ID_FK" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_SEQUENCES" ADD CONSTRAINT "SYS_C0023439" CHECK ("NAME" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_SEQUENCES" ADD CONSTRAINT "SYS_C0023440" CHECK ("SEQ_START" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_SEQUENCES" ADD CONSTRAINT "SYS_C0023441" CHECK ("INCR" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_SEQUENCES" ADD CONSTRAINT "SYS_C0023442" CHECK ("SECURITY_GROUP_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_SEQUENCES" ADD CONSTRAINT "SYS_C0023443" CHECK ("CREATED_ON" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_SEQUENCES" ADD CONSTRAINT "SYS_C0023444" CHECK ("CREATED_BY" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table MD_STORED_PROGRAMS
-- ----------------------------
ALTER TABLE "TEST"."MD_STORED_PROGRAMS" ADD CONSTRAINT "MD_STORED_PROGRAMS_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table MD_STORED_PROGRAMS
-- ----------------------------
ALTER TABLE "TEST"."MD_STORED_PROGRAMS" ADD CONSTRAINT "SYS_C0023641" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_STORED_PROGRAMS" ADD CONSTRAINT "SYS_C0023642" CHECK ("SCHEMA_ID_FK" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_STORED_PROGRAMS" ADD CONSTRAINT "SYS_C0023643" CHECK ("LANGUAGE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_STORED_PROGRAMS" ADD CONSTRAINT "SYS_C0023644" CHECK ("SECURITY_GROUP_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_STORED_PROGRAMS" ADD CONSTRAINT "SYS_C0023645" CHECK ("CREATED_ON" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table MD_SYNONYMS
-- ----------------------------
ALTER TABLE "TEST"."MD_SYNONYMS" ADD CONSTRAINT "MD_SYNONYMS_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table MD_SYNONYMS
-- ----------------------------
ALTER TABLE "TEST"."MD_SYNONYMS" ADD CONSTRAINT "SYS_C0023585" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_SYNONYMS" ADD CONSTRAINT "SYS_C0023586" CHECK ("SCHEMA_ID_FK" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_SYNONYMS" ADD CONSTRAINT "SYS_C0023587" CHECK ("NAME" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_SYNONYMS" ADD CONSTRAINT "SYS_C0023588" CHECK ("SYNONYM_FOR_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_SYNONYMS" ADD CONSTRAINT "SYS_C0023589" CHECK ("FOR_OBJECT_TYPE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_SYNONYMS" ADD CONSTRAINT "SYS_C0023590" CHECK ("SECURITY_GROUP_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_SYNONYMS" ADD CONSTRAINT "SYS_C0023591" CHECK ("CREATED_ON" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table MD_TABLES
-- ----------------------------
ALTER TABLE "TEST"."MD_TABLES" ADD CONSTRAINT "MD_TABLES_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table MD_TABLES
-- ----------------------------
ALTER TABLE "TEST"."MD_TABLES" ADD CONSTRAINT "SYS_C0023531" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_TABLES" ADD CONSTRAINT "SYS_C0023532" CHECK ("SCHEMA_ID_FK" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_TABLES" ADD CONSTRAINT "SYS_C0023533" CHECK ("TABLE_NAME" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_TABLES" ADD CONSTRAINT "SYS_C0023534" CHECK ("QUALIFIED_NATIVE_NAME" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_TABLES" ADD CONSTRAINT "SYS_C0023535" CHECK ("SECURITY_GROUP_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_TABLES" ADD CONSTRAINT "SYS_C0023536" CHECK ("CREATED_ON" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table MD_TABLESPACES
-- ----------------------------
ALTER TABLE "TEST"."MD_TABLESPACES" ADD CONSTRAINT "MD_TABLESPACES_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table MD_TABLESPACES
-- ----------------------------
ALTER TABLE "TEST"."MD_TABLESPACES" ADD CONSTRAINT "SYS_C0023410" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_TABLESPACES" ADD CONSTRAINT "SYS_C0023411" CHECK ("SCHEMA_ID_FK" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_TABLESPACES" ADD CONSTRAINT "SYS_C0023412" CHECK ("SECURITY_GROUP_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_TABLESPACES" ADD CONSTRAINT "SYS_C0023413" CHECK ("CREATED_ON" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table MD_TRIGGERS
-- ----------------------------
ALTER TABLE "TEST"."MD_TRIGGERS" ADD CONSTRAINT "MD_TRIGGERS_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table MD_TRIGGERS
-- ----------------------------
ALTER TABLE "TEST"."MD_TRIGGERS" ADD CONSTRAINT "SYS_C0023593" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_TRIGGERS" ADD CONSTRAINT "SYS_C0023594" CHECK ("TABLE_OR_VIEW_ID_FK" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_TRIGGERS" ADD CONSTRAINT "SYS_C0023595" CHECK ("TRIGGER_ON_FLAG" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_TRIGGERS" ADD CONSTRAINT "SYS_C0023596" CHECK ("LANGUAGE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_TRIGGERS" ADD CONSTRAINT "SYS_C0023597" CHECK ("SECURITY_GROUP_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_TRIGGERS" ADD CONSTRAINT "SYS_C0023598" CHECK ("CREATED_ON" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table MD_USERS
-- ----------------------------
ALTER TABLE "TEST"."MD_USERS" ADD CONSTRAINT "MD_USERS_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table MD_USERS
-- ----------------------------
ALTER TABLE "TEST"."MD_USERS" ADD CONSTRAINT "SYS_C0023421" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_USERS" ADD CONSTRAINT "SYS_C0023422" CHECK ("SCHEMA_ID_FK" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_USERS" ADD CONSTRAINT "SYS_C0023423" CHECK ("USERNAME" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_USERS" ADD CONSTRAINT "SYS_C0023424" CHECK ("SECURITY_GROUP_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_USERS" ADD CONSTRAINT "SYS_C0023425" CHECK ("CREATED_ON" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table MD_USER_DEFINED_DATA_TYPES
-- ----------------------------
ALTER TABLE "TEST"."MD_USER_DEFINED_DATA_TYPES" ADD CONSTRAINT "MD_USER_DEFINED_DATA_TYPES_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table MD_USER_DEFINED_DATA_TYPES
-- ----------------------------
ALTER TABLE "TEST"."MD_USER_DEFINED_DATA_TYPES" ADD CONSTRAINT "SYS_C0023501" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_USER_DEFINED_DATA_TYPES" ADD CONSTRAINT "SYS_C0023502" CHECK ("SCHEMA_ID_FK" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_USER_DEFINED_DATA_TYPES" ADD CONSTRAINT "SYS_C0023503" CHECK ("DATA_TYPE_NAME" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_USER_DEFINED_DATA_TYPES" ADD CONSTRAINT "SYS_C0023504" CHECK ("DEFINITION" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_USER_DEFINED_DATA_TYPES" ADD CONSTRAINT "SYS_C0023505" CHECK ("NATIVE_SQL" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_USER_DEFINED_DATA_TYPES" ADD CONSTRAINT "SYS_C0023506" CHECK ("SECURITY_GROUP_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_USER_DEFINED_DATA_TYPES" ADD CONSTRAINT "SYS_C0023507" CHECK ("CREATED_ON" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table MD_USER_PRIVILEGES
-- ----------------------------
ALTER TABLE "TEST"."MD_USER_PRIVILEGES" ADD CONSTRAINT "MD_USER_PRIVILEGES_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table MD_USER_PRIVILEGES
-- ----------------------------
ALTER TABLE "TEST"."MD_USER_PRIVILEGES" ADD CONSTRAINT "SYS_C0023415" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_USER_PRIVILEGES" ADD CONSTRAINT "SYS_C0023416" CHECK ("USER_ID_FK" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_USER_PRIVILEGES" ADD CONSTRAINT "SYS_C0023417" CHECK ("SECURITY_GROUP_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_USER_PRIVILEGES" ADD CONSTRAINT "SYS_C0023418" CHECK ("CREATED_ON" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table MD_VIEWS
-- ----------------------------
ALTER TABLE "TEST"."MD_VIEWS" ADD CONSTRAINT "MD_VIEWS_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table MD_VIEWS
-- ----------------------------
ALTER TABLE "TEST"."MD_VIEWS" ADD CONSTRAINT "SYS_C0023551" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_VIEWS" ADD CONSTRAINT "SYS_C0023552" CHECK ("SCHEMA_ID_FK" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_VIEWS" ADD CONSTRAINT "SYS_C0023553" CHECK ("LANGUAGE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_VIEWS" ADD CONSTRAINT "SYS_C0023554" CHECK ("SECURITY_GROUP_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_VIEWS" ADD CONSTRAINT "SYS_C0023555" CHECK ("CREATED_ON" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table MIGRLOG
-- ----------------------------
ALTER TABLE "TEST"."MIGRLOG" ADD CONSTRAINT "MIGRLOG_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table MIGRLOG
-- ----------------------------
ALTER TABLE "TEST"."MIGRLOG" ADD CONSTRAINT "SYS_C0023527" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MIGRLOG" ADD CONSTRAINT "SYS_C0023528" CHECK ("LOG_DATE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MIGRLOG" ADD CONSTRAINT "SYS_C0023529" CHECK ("SEVERITY" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table MIGR_DATATYPE_TRANSFORM_MAP
-- ----------------------------
ALTER TABLE "TEST"."MIGR_DATATYPE_TRANSFORM_MAP" ADD CONSTRAINT "MIGR_DATATYPE_TRANSFORM_M_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table MIGR_DATATYPE_TRANSFORM_MAP
-- ----------------------------
ALTER TABLE "TEST"."MIGR_DATATYPE_TRANSFORM_MAP" ADD CONSTRAINT "SYS_C0023509" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MIGR_DATATYPE_TRANSFORM_MAP" ADD CONSTRAINT "SYS_C0023510" CHECK ("PROJECT_ID_FK" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MIGR_DATATYPE_TRANSFORM_MAP" ADD CONSTRAINT "SYS_C0023511" CHECK ("SECURITY_GROUP_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MIGR_DATATYPE_TRANSFORM_MAP" ADD CONSTRAINT "SYS_C0023512" CHECK ("CREATED_ON" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table MIGR_DATATYPE_TRANSFORM_RULE
-- ----------------------------
ALTER TABLE "TEST"."MIGR_DATATYPE_TRANSFORM_RULE" ADD CONSTRAINT "MIGR_DATATYPE_TRANSFORM_R_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table MIGR_DATATYPE_TRANSFORM_RULE
-- ----------------------------
ALTER TABLE "TEST"."MIGR_DATATYPE_TRANSFORM_RULE" ADD CONSTRAINT "SYS_C0023562" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MIGR_DATATYPE_TRANSFORM_RULE" ADD CONSTRAINT "SYS_C0023563" CHECK ("MAP_ID_FK" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MIGR_DATATYPE_TRANSFORM_RULE" ADD CONSTRAINT "SYS_C0023564" CHECK ("SOURCE_DATA_TYPE_NAME" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MIGR_DATATYPE_TRANSFORM_RULE" ADD CONSTRAINT "SYS_C0023565" CHECK ("TARGET_DATA_TYPE_NAME" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MIGR_DATATYPE_TRANSFORM_RULE" ADD CONSTRAINT "SYS_C0023566" CHECK ("SECURITY_GROUP_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MIGR_DATATYPE_TRANSFORM_RULE" ADD CONSTRAINT "SYS_C0023567" CHECK ("CREATED_ON" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table MIGR_GENERATION_ORDER
-- ----------------------------
ALTER TABLE "TEST"."MIGR_GENERATION_ORDER" ADD CONSTRAINT "MIGR_GENERATION_ORDER_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Uniques structure for table MIGR_GENERATION_ORDER
-- ----------------------------
ALTER TABLE "TEST"."MIGR_GENERATION_ORDER" ADD CONSTRAINT "MIGR_GENERATION_ORDER_UK" UNIQUE ("OBJECT_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Checks structure for table MIGR_GENERATION_ORDER
-- ----------------------------
ALTER TABLE "TEST"."MIGR_GENERATION_ORDER" ADD CONSTRAINT "SYS_C0023618" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MIGR_GENERATION_ORDER" ADD CONSTRAINT "SYS_C0023619" CHECK ("CONNECTION_ID_FK" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MIGR_GENERATION_ORDER" ADD CONSTRAINT "SYS_C0023620" CHECK ("OBJECT_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MIGR_GENERATION_ORDER" ADD CONSTRAINT "SYS_C0023621" CHECK ("OBJECT_TYPE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MIGR_GENERATION_ORDER" ADD CONSTRAINT "SYS_C0023622" CHECK ("GENERATION_ORDER" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table STAGE_MIGRLOG
-- ----------------------------
ALTER TABLE "TEST"."STAGE_MIGRLOG" ADD CONSTRAINT "STAGE_MIGRLOG_PK" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table STAGE_MIGRLOG
-- ----------------------------
ALTER TABLE "TEST"."STAGE_MIGRLOG" ADD CONSTRAINT "SYS_C0023696" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."STAGE_MIGRLOG" ADD CONSTRAINT "SYS_C0023697" CHECK ("LOG_DATE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."STAGE_MIGRLOG" ADD CONSTRAINT "SYS_C0023698" CHECK ("SEVERITY" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table TAB_EMPLOYEE
-- ----------------------------
ALTER TABLE "TEST"."TAB_EMPLOYEE" ADD CONSTRAINT "SYS_C0011846" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table TAB_EMPLOYEE
-- ----------------------------
ALTER TABLE "TEST"."TAB_EMPLOYEE" ADD CONSTRAINT "SYS_C0011840" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."TAB_EMPLOYEE" ADD CONSTRAINT "SYS_C0011841" CHECK ("NAME" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."TAB_EMPLOYEE" ADD CONSTRAINT "SYS_C0011842" CHECK ("SEX" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."TAB_EMPLOYEE" ADD CONSTRAINT "SYS_C0011843" CHECK ("BUSINESS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."TAB_EMPLOYEE" ADD CONSTRAINT "SYS_C0011844" CHECK ("ADDRESS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."TAB_EMPLOYEE" ADD CONSTRAINT "SYS_C0011845" CHECK ("REMARK" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table TAB_PRODUCT
-- ----------------------------
ALTER TABLE "TEST"."TAB_PRODUCT" ADD CONSTRAINT "SYS_C0011852" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table TAB_PRODUCT
-- ----------------------------
ALTER TABLE "TEST"."TAB_PRODUCT" ADD CONSTRAINT "SYS_C0011847" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."TAB_PRODUCT" ADD CONSTRAINT "SYS_C0011848" CHECK ("NAME" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."TAB_PRODUCT" ADD CONSTRAINT "SYS_C0011849" CHECK ("PRICE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."TAB_PRODUCT" ADD CONSTRAINT "SYS_C0011850" CHECK ("FACTORY" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."TAB_PRODUCT" ADD CONSTRAINT "SYS_C0011851" CHECK ("REMARK" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table TB_BOOKS
-- ----------------------------
CREATE TRIGGER "TEST"."TB_BOOKS_GS" BEFORE INSERT OR UPDATE ON "TEST"."TB_BOOKS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW 
declare
  -- local variables here
begin
:NEW.NAME := to_char(sysdate, 'yyyy-MM-dd');
end tb_books_gs;
/
CREATE TRIGGER "TEST"."TB_BOOKS_NEW1" BEFORE INSERT ON "TEST"."TB_BOOKS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW 
declare
  -- local variables here
begin
  select test.new1.nextval into :new.id from dual;
end tb_books_new1;
/

-- ----------------------------
-- Primary Key structure for table TB_STUDENTS
-- ----------------------------
ALTER TABLE "TEST"."TB_STUDENTS" ADD CONSTRAINT "SYS_C0011862" PRIMARY KEY ("ID");

-- ----------------------------
-- Checks structure for table TB_STUDENTS
-- ----------------------------
ALTER TABLE "TEST"."TB_STUDENTS" ADD CONSTRAINT "SYS_C0011853" CHECK ("ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."TB_STUDENTS" ADD CONSTRAINT "SYS_C0011854" CHECK ("STUDENTCODE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."TB_STUDENTS" ADD CONSTRAINT "SYS_C0011855" CHECK ("NAME" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."TB_STUDENTS" ADD CONSTRAINT "SYS_C0011856" CHECK ("SEX" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."TB_STUDENTS" ADD CONSTRAINT "SYS_C0011857" CHECK ("INSTITUTE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."TB_STUDENTS" ADD CONSTRAINT "SYS_C0011858" CHECK ("DEPARTMENT" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."TB_STUDENTS" ADD CONSTRAINT "SYS_C0011859" CHECK ("CLASSES" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."TB_STUDENTS" ADD CONSTRAINT "SYS_C0011860" CHECK ("PHONE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."TB_STUDENTS" ADD CONSTRAINT "SYS_C0011861" CHECK ("ADDRESS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table TB_USER
-- ----------------------------
ALTER TABLE "TEST"."TB_USER" ADD CONSTRAINT "SYS_C0011904" PRIMARY KEY ("TB_USERID");

-- ----------------------------
-- Checks structure for table TB_USER
-- ----------------------------
ALTER TABLE "TEST"."TB_USER" ADD CONSTRAINT "SYS_C0011902" CHECK ("TB_USERNAME" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."TB_USER" ADD CONSTRAINT "SYS_C0011903" CHECK ("TB_PASSWORD" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."TB_USER" ADD CONSTRAINT "SYS_C0011905" CHECK ("TB_USERPHONE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table TB_USER
-- ----------------------------
CREATE TRIGGER "TEST"."AUTO_TRI_TB_USER" BEFORE INSERT ON "TEST"."TB_USER" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW 
declare
  -- local variables here
begin
  select  test.auto_tb_user.nextval into :new.tb_userid from dual;
end Auto_Tri_tb_user;
/

-- ----------------------------
-- Checks structure for table WARNINGSTATU
-- ----------------------------
ALTER TABLE "TEST"."WARNINGSTATU" ADD CONSTRAINT "SYS_C0021464" CHECK ("STATU" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table MD_ADDITIONAL_PROPERTIES
-- ----------------------------
ALTER TABLE "TEST"."MD_ADDITIONAL_PROPERTIES" ADD CONSTRAINT "MD_ADDITIONAL_PROPERTIES__FK1" FOREIGN KEY ("CONNECTION_ID_FK") REFERENCES "TEST"."MD_CONNECTIONS" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table MD_APPLICATIONFILES
-- ----------------------------

-- ----------------------------
-- Foreign Keys structure for table MD_APPLICATIONS
-- ----------------------------
ALTER TABLE "TEST"."MD_APPLICATIONS" ADD CONSTRAINT "MD_APP_PROJ_FK" FOREIGN KEY ("PROJECT_ID_FK") REFERENCES "TEST"."MD_PROJECTS" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table MD_CATALOGS
-- ----------------------------
ALTER TABLE "TEST"."MD_CATALOGS" ADD CONSTRAINT "MD_CATALOGS_MD_CONNECTION_FK1" FOREIGN KEY ("CONNECTION_ID_FK") REFERENCES "TEST"."MD_CONNECTIONS" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table MD_COLUMNS
-- ----------------------------
ALTER TABLE "TEST"."MD_COLUMNS" ADD CONSTRAINT "MD_COLUMNS_MD_TABLES_FK1" FOREIGN KEY ("TABLE_ID_FK") REFERENCES "TEST"."MD_TABLES" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table MD_CONNECTIONS
-- ----------------------------
ALTER TABLE "TEST"."MD_CONNECTIONS" ADD CONSTRAINT "MD_CONNECTIONS_MD_PROJECT_FK1" FOREIGN KEY ("PROJECT_ID_FK") REFERENCES "TEST"."MD_PROJECTS" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table MD_CONSTRAINTS
-- ----------------------------
ALTER TABLE "TEST"."MD_CONSTRAINTS" ADD CONSTRAINT "MD_CONSTRAINTS_MD_TABLES_FK1" FOREIGN KEY ("TABLE_ID_FK") REFERENCES "TEST"."MD_TABLES" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table MD_CONSTRAINT_DETAILS
-- ----------------------------
ALTER TABLE "TEST"."MD_CONSTRAINT_DETAILS" ADD CONSTRAINT "MD_CONSTRAINT_DETAILS_MD__FK1" FOREIGN KEY ("CONSTRAINT_ID_FK") REFERENCES "TEST"."MD_CONSTRAINTS" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_CONSTRAINT_DETAILS" ADD CONSTRAINT "MD_CONSTRAINT_DETAILS_MD__FK2" FOREIGN KEY ("COLUMN_ID_FK") REFERENCES "TEST"."MD_COLUMNS" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table MD_DERIVATIVES
-- ----------------------------
ALTER TABLE "TEST"."MD_DERIVATIVES" ADD CONSTRAINT "MD_DERIVATIVES_MD_CONNECT_FK1" FOREIGN KEY ("DERIVED_CONNECTION_ID_FK") REFERENCES "TEST"."MD_CONNECTIONS" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table MD_FILE_ARTIFACTS
-- ----------------------------
ALTER TABLE "TEST"."MD_FILE_ARTIFACTS" ADD CONSTRAINT "MD_ARTIFACT_FILE_FK" FOREIGN KEY ("APPLICATIONFILES_ID") REFERENCES "TEST"."MD_APPLICATIONFILES" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table MD_GROUPS
-- ----------------------------
ALTER TABLE "TEST"."MD_GROUPS" ADD CONSTRAINT "MD_GROUPS_MD_SCHEMAS_FK1" FOREIGN KEY ("SCHEMA_ID_FK") REFERENCES "TEST"."MD_SCHEMAS" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table MD_GROUP_MEMBERS
-- ----------------------------
ALTER TABLE "TEST"."MD_GROUP_MEMBERS" ADD CONSTRAINT "MD_GROUPMEMBERS_MD_GROUPS_FK1" FOREIGN KEY ("GROUP_ID_FK") REFERENCES "TEST"."MD_GROUPS" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_GROUP_MEMBERS" ADD CONSTRAINT "MD_GROUPMEMBERS_MD_GROUPS_FK2" FOREIGN KEY ("GROUP_MEMBER_ID_FK") REFERENCES "TEST"."MD_GROUPS" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_GROUP_MEMBERS" ADD CONSTRAINT "MD_GROUPMEMBERS_MD_USERS_FK1" FOREIGN KEY ("USER_ID_FK") REFERENCES "TEST"."MD_USERS" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table MD_GROUP_PRIVILEGES
-- ----------------------------
ALTER TABLE "TEST"."MD_GROUP_PRIVILEGES" ADD CONSTRAINT "MD_GROUP_PRIVILEGES_MD_GR_FK1" FOREIGN KEY ("GROUP_ID_FK") REFERENCES "TEST"."MD_GROUPS" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_GROUP_PRIVILEGES" ADD CONSTRAINT "MD_GROUP_PRIVILEGES_MD_PR_FK1" FOREIGN KEY ("PRIVILEGE_ID_FK") REFERENCES "TEST"."MD_PRIVILEGES" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table MD_INDEXES
-- ----------------------------
ALTER TABLE "TEST"."MD_INDEXES" ADD CONSTRAINT "MD_INDEXES_MD_TABLES_FK1" FOREIGN KEY ("TABLE_ID_FK") REFERENCES "TEST"."MD_TABLES" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table MD_INDEX_DETAILS
-- ----------------------------
ALTER TABLE "TEST"."MD_INDEX_DETAILS" ADD CONSTRAINT "MD_INDEX_DETAILS_MD_COLUM_FK1" FOREIGN KEY ("COLUMN_ID_FK") REFERENCES "TEST"."MD_COLUMNS" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_INDEX_DETAILS" ADD CONSTRAINT "MD_INDEX_DETAILS_MD_INDEX_FK1" FOREIGN KEY ("INDEX_ID_FK") REFERENCES "TEST"."MD_INDEXES" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table MD_MIGR_DEPENDENCY
-- ----------------------------
ALTER TABLE "TEST"."MD_MIGR_DEPENDENCY" ADD CONSTRAINT "MIGR_DEPENDENCY_FK" FOREIGN KEY ("CONNECTION_ID_FK") REFERENCES "TEST"."MD_CONNECTIONS" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table MD_MIGR_PARAMETER
-- ----------------------------
ALTER TABLE "TEST"."MD_MIGR_PARAMETER" ADD CONSTRAINT "MIGR_PARAMETER_FK" FOREIGN KEY ("CONNECTION_ID_FK") REFERENCES "TEST"."MD_CONNECTIONS" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table MD_MIGR_WEAKDEP
-- ----------------------------
ALTER TABLE "TEST"."MD_MIGR_WEAKDEP" ADD CONSTRAINT "MIGR_WEAKDEP_FK1" FOREIGN KEY ("CONNECTION_ID_FK") REFERENCES "TEST"."MD_CONNECTIONS" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_MIGR_WEAKDEP" ADD CONSTRAINT "MIGR_WEAKDEP_FK2" FOREIGN KEY ("SCHEMA_ID_FK") REFERENCES "TEST"."MD_SCHEMAS" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table MD_OTHER_OBJECTS
-- ----------------------------
ALTER TABLE "TEST"."MD_OTHER_OBJECTS" ADD CONSTRAINT "MD_OTHER_OBJECTS_MD_SCHEM_FK1" FOREIGN KEY ("SCHEMA_ID_FK") REFERENCES "TEST"."MD_SCHEMAS" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table MD_PACKAGES
-- ----------------------------
ALTER TABLE "TEST"."MD_PACKAGES" ADD CONSTRAINT "MD_PACKAGES_MD_SCHEMAS_FK1" FOREIGN KEY ("SCHEMA_ID_FK") REFERENCES "TEST"."MD_SCHEMAS" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table MD_PARTITIONS
-- ----------------------------
ALTER TABLE "TEST"."MD_PARTITIONS" ADD CONSTRAINT "MD_PARTITIONS_MD_TABLES_FK1" FOREIGN KEY ("TABLE_ID_FK") REFERENCES "TEST"."MD_TABLES" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table MD_PRIVILEGES
-- ----------------------------
ALTER TABLE "TEST"."MD_PRIVILEGES" ADD CONSTRAINT "MD_PRIVILEGES_MD_SCHEMAS_FK1" FOREIGN KEY ("SCHEMA_ID_FK") REFERENCES "TEST"."MD_SCHEMAS" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table MD_SCHEMAS
-- ----------------------------
ALTER TABLE "TEST"."MD_SCHEMAS" ADD CONSTRAINT "MD_SCHEMAS_MD_CATALOGS_FK1" FOREIGN KEY ("CATALOG_ID_FK") REFERENCES "TEST"."MD_CATALOGS" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table MD_SEQUENCES
-- ----------------------------
ALTER TABLE "TEST"."MD_SEQUENCES" ADD CONSTRAINT "MD_SEQUENCES_MD_SCHEMAS_FK1" FOREIGN KEY ("SCHEMA_ID_FK") REFERENCES "TEST"."MD_SCHEMAS" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table MD_STORED_PROGRAMS
-- ----------------------------
ALTER TABLE "TEST"."MD_STORED_PROGRAMS" ADD CONSTRAINT "MD_STORED_PROGRAMS_MD_PAC_FK1" FOREIGN KEY ("PACKAGE_ID_FK") REFERENCES "TEST"."MD_PACKAGES" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_STORED_PROGRAMS" ADD CONSTRAINT "MD_STORED_PROGRAMS_MD_SCH_FK1" FOREIGN KEY ("SCHEMA_ID_FK") REFERENCES "TEST"."MD_SCHEMAS" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table MD_SYNONYMS
-- ----------------------------
ALTER TABLE "TEST"."MD_SYNONYMS" ADD CONSTRAINT "MD_SYNONYMS_MD_SCHEMAS_FK1" FOREIGN KEY ("SCHEMA_ID_FK") REFERENCES "TEST"."MD_SCHEMAS" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table MD_TABLES
-- ----------------------------
ALTER TABLE "TEST"."MD_TABLES" ADD CONSTRAINT "MD_TABLES_MD_SCHEMAS_FK1" FOREIGN KEY ("SCHEMA_ID_FK") REFERENCES "TEST"."MD_SCHEMAS" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table MD_TABLESPACES
-- ----------------------------
ALTER TABLE "TEST"."MD_TABLESPACES" ADD CONSTRAINT "MD_TABLESPACES_MD_SCHEMAS_FK1" FOREIGN KEY ("SCHEMA_ID_FK") REFERENCES "TEST"."MD_SCHEMAS" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table MD_USERS
-- ----------------------------
ALTER TABLE "TEST"."MD_USERS" ADD CONSTRAINT "MD_USERS_MD_SCHEMAS_FK1" FOREIGN KEY ("SCHEMA_ID_FK") REFERENCES "TEST"."MD_SCHEMAS" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table MD_USER_DEFINED_DATA_TYPES
-- ----------------------------
ALTER TABLE "TEST"."MD_USER_DEFINED_DATA_TYPES" ADD CONSTRAINT "MD_USER_DEFINED_DATA_TYPE_FK1" FOREIGN KEY ("SCHEMA_ID_FK") REFERENCES "TEST"."MD_SCHEMAS" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table MD_USER_PRIVILEGES
-- ----------------------------
ALTER TABLE "TEST"."MD_USER_PRIVILEGES" ADD CONSTRAINT "MD_USER_PRIVILEGES_MD_PRI_FK1" FOREIGN KEY ("PRIVILEGE_ID_FK") REFERENCES "TEST"."MD_PRIVILEGES" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "TEST"."MD_USER_PRIVILEGES" ADD CONSTRAINT "MD_USER_PRIVILEGES_MD_USE_FK1" FOREIGN KEY ("USER_ID_FK") REFERENCES "TEST"."MD_USERS" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table MD_VIEWS
-- ----------------------------
ALTER TABLE "TEST"."MD_VIEWS" ADD CONSTRAINT "MD_VIEWS_MD_SCHEMAS_FK1" FOREIGN KEY ("SCHEMA_ID_FK") REFERENCES "TEST"."MD_SCHEMAS" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table MIGRLOG
-- ----------------------------
ALTER TABLE "TEST"."MIGRLOG" ADD CONSTRAINT "MIGR_MIGRLOG_FK" FOREIGN KEY ("PARENT_LOG_ID") REFERENCES "TEST"."MIGRLOG" ("ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table MIGR_DATATYPE_TRANSFORM_MAP
-- ----------------------------
ALTER TABLE "TEST"."MIGR_DATATYPE_TRANSFORM_MAP" ADD CONSTRAINT "MIGR_DATATYPE_TRANSFORM_M_FK1" FOREIGN KEY ("PROJECT_ID_FK") REFERENCES "TEST"."MD_PROJECTS" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table MIGR_DATATYPE_TRANSFORM_RULE
-- ----------------------------
ALTER TABLE "TEST"."MIGR_DATATYPE_TRANSFORM_RULE" ADD CONSTRAINT "MIGR_DATATYPE_TRANSFORM_R_FK1" FOREIGN KEY ("MAP_ID_FK") REFERENCES "TEST"."MIGR_DATATYPE_TRANSFORM_MAP" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table MIGR_GENERATION_ORDER
-- ----------------------------
ALTER TABLE "TEST"."MIGR_GENERATION_ORDER" ADD CONSTRAINT "MIGR_GENERATION_ORDER_MD__FK1" FOREIGN KEY ("CONNECTION_ID_FK") REFERENCES "TEST"."MD_CONNECTIONS" ("ID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
